{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8","program":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_util","--edition=2018","C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=b77f45b4369a2d35","-C","extra-filename=-b77f45b4369a2d35","--out-dir","c:\\Users\\CYM\\Desktop\\buceaNet\\rust\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\CYM\\Desktop\\buceaNet\\rust\\target\\rls\\debug\\deps","--extern","futures_core=c:\\Users\\CYM\\Desktop\\buceaNet\\rust\\target\\rls\\debug\\deps\\libfutures_core-6c3c10cacb526b84.rmeta","--extern","futures_task=c:\\Users\\CYM\\Desktop\\buceaNet\\rust\\target\\rls\\debug\\deps\\libfutures_task-2be3ac86b5a9f591.rmeta","--extern","pin_project=c:\\Users\\CYM\\Desktop\\buceaNet\\rust\\target\\rls\\debug\\deps\\libpin_project-c383b6c7df1d07d6.rmeta","--extern","pin_utils=c:\\Users\\CYM\\Desktop\\buceaNet\\rust\\target\\rls\\debug\\deps\\libpin_utils-1e19f269512c8b6a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\CYM\\scoop\\persist\\rustup\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\CYM\\Desktop\\buceaNet\\rust\\target\\rls\\debug\\deps\\libfutures_util-b77f45b4369a2d35.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[753406967843566764,8237425154131375801]},"crate_root":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src","external_crates":[{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[3294562336267099064,32966444439847392]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[8997478989526601172,15466949633016966289]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[2630917957276446109,8658156290826251556]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":4,"id":{"name":"futures_core","disambiguator":[18323906423729551861,18288256076744076581]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":5,"id":{"name":"std","disambiguator":[1921591330338517602,8002743023817837766]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":6,"id":{"name":"alloc","disambiguator":[16592919627580665262,9528133364691589515]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":7,"id":{"name":"libc","disambiguator":[12745094628986209607,10518202857406436678]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12421643217715303902,5448498891032173630]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[10471275659107711445,16777480585464664117]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[5556840401016198219,10246883469141694681]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5351773000290944944,5461204872568622329]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[1406896991597352872,16715998803959789672]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16017799561494711091,10322761666972095232]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","num":14,"id":{"name":"pin_utils","disambiguator":[15792880664098840853,11768124074165089136]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","num":15,"id":{"name":"futures_task","disambiguator":[13907587114840252980,17060793695003329038]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","num":16,"id":{"name":"pin_project","disambiguator":[12742648026883208984,8093847737041157529]}},{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","num":17,"id":{"name":"pin_project_internal","disambiguator":[17527568345691088981,8320351579889662702]}}],"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":0,"byte_end":12599,"line_start":1,"line_end":344,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":131},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":1863,"byte_end":1868,"line_start":41,"line_end":41,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":7},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":1889,"byte_end":1896,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":17},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":12919,"byte_end":12930,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":1,"index":9060},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":12932,"byte_end":12938,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":4,"index":32},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":12940,"byte_end":12949,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":15,"index":89},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":12975,"byte_end":12984,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":15,"index":55},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":12986,"byte_end":13000,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":15,"index":110},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13002,"byte_end":13017,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2652},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13132,"byte_end":13139,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13141,"byte_end":13145,"line_start":16,"line_end":16,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13147,"byte_end":13156,"line_start":16,"line_end":16,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13158,"byte_end":13165,"line_start":16,"line_end":16,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2830},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13167,"byte_end":13177,"line_start":16,"line_end":16,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13179,"byte_end":13182,"line_start":16,"line_end":16,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3107},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13184,"byte_end":13194,"line_start":16,"line_end":16,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2956},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13196,"byte_end":13200,"line_start":16,"line_end":16,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3161},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13202,"byte_end":13211,"line_start":16,"line_end":16,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2886},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13213,"byte_end":13220,"line_start":16,"line_end":16,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2706},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13316,"byte_end":13329,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3571},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13659,"byte_end":13666,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3738},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13668,"byte_end":13675,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3807},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13677,"byte_end":13683,"line_start":35,"line_end":35,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13685,"byte_end":13695,"line_start":35,"line_end":35,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3876},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13697,"byte_end":13706,"line_start":35,"line_end":35,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3213},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13708,"byte_end":13718,"line_start":35,"line_end":35,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4083},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13720,"byte_end":13726,"line_start":35,"line_end":35,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13728,"byte_end":13733,"line_start":35,"line_end":35,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3655},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13735,"byte_end":13741,"line_start":35,"line_end":35,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3514},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13743,"byte_end":13759,"line_start":35,"line_end":35,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13765,"byte_end":13777,"line_start":36,"line_end":36,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4236},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13779,"byte_end":13791,"line_start":36,"line_end":36,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4153},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13793,"byte_end":13804,"line_start":36,"line_end":36,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13806,"byte_end":13816,"line_start":36,"line_end":36,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13988,"byte_end":13992,"line_start":46,"line_end":46,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4302},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":13994,"byte_end":13998,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14039,"byte_end":14046,"line_start":49,"line_end":49,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4308},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14048,"byte_end":14055,"line_start":49,"line_end":49,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14102,"byte_end":14112,"line_start":52,"line_end":52,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4314},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14114,"byte_end":14123,"line_start":52,"line_end":52,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14178,"byte_end":14192,"line_start":55,"line_end":55,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4373},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14194,"byte_end":14206,"line_start":55,"line_end":55,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4432},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14244,"byte_end":14256,"line_start":58,"line_end":58,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14296,"byte_end":14303,"line_start":61,"line_end":61,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14305,"byte_end":14311,"line_start":61,"line_end":61,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14348,"byte_end":14351,"line_start":64,"line_end":64,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14353,"byte_end":14355,"line_start":64,"line_end":64,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14357,"byte_end":14362,"line_start":64,"line_end":64,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4480},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14364,"byte_end":14369,"line_start":64,"line_end":64,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14404,"byte_end":14408,"line_start":67,"line_end":67,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14410,"byte_end":14415,"line_start":67,"line_end":67,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14417,"byte_end":14422,"line_start":67,"line_end":67,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14424,"byte_end":14429,"line_start":67,"line_end":67,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4582},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14431,"byte_end":14435,"line_start":67,"line_end":67,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4635},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14437,"byte_end":14442,"line_start":67,"line_end":67,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4702},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14444,"byte_end":14449,"line_start":67,"line_end":67,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4783},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14451,"byte_end":14456,"line_start":67,"line_end":67,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14607,"byte_end":14613,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4878},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14615,"byte_end":14621,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14789,"byte_end":14797,"line_start":84,"line_end":84,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14799,"byte_end":14808,"line_start":84,"line_end":84,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14810,"byte_end":14819,"line_start":84,"line_end":84,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14821,"byte_end":14830,"line_start":84,"line_end":84,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4956},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14832,"byte_end":14839,"line_start":84,"line_end":84,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5009},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14841,"byte_end":14849,"line_start":84,"line_end":84,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5076},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14851,"byte_end":14859,"line_start":84,"line_end":84,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5157},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":14861,"byte_end":14869,"line_start":84,"line_end":84,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":15045,"byte_end":15055,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5252},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":15057,"byte_end":15066,"line_start":93,"line_end":93,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":15220,"byte_end":15226,"line_start":101,"line_end":101,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":11873,"byte_end":11882,"line_start":311,"line_end":311,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":11884,"byte_end":11896,"line_start":311,"line_end":311,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":82},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113258,"byte_end":113269,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":4,"index":68},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113271,"byte_end":113277,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":4,"index":97},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113279,"byte_end":113288,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5318},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113404,"byte_end":113409,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5375},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113411,"byte_end":113418,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5431},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113420,"byte_end":113426,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5476},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113428,"byte_end":113433,"line_start":16,"line_end":16,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5521},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113435,"byte_end":113444,"line_start":16,"line_end":16,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5570},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113446,"byte_end":113452,"line_start":16,"line_end":16,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5643},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113454,"byte_end":113463,"line_start":16,"line_end":16,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6172},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113465,"byte_end":113472,"line_start":16,"line_end":16,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5776},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113474,"byte_end":113481,"line_start":16,"line_end":16,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5835},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113483,"byte_end":113487,"line_start":16,"line_end":16,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5914},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113489,"byte_end":113496,"line_start":16,"line_end":16,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5980},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113502,"byte_end":113506,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6038},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113508,"byte_end":113515,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6112},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113517,"byte_end":113520,"line_start":17,"line_end":17,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6261},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113522,"byte_end":113526,"line_start":17,"line_end":17,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6326},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113528,"byte_end":113532,"line_start":17,"line_end":17,"column_start":31,"column_end":35},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6277},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113534,"byte_end":113542,"line_start":17,"line_end":17,"column_start":37,"column_end":45},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6821},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113544,"byte_end":113548,"line_start":17,"line_end":17,"column_start":47,"column_end":51},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6269},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113550,"byte_end":113564,"line_start":17,"line_end":17,"column_start":53,"column_end":67},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6375},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113566,"byte_end":113570,"line_start":17,"line_end":17,"column_start":69,"column_end":73},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6424},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113572,"byte_end":113581,"line_start":17,"line_end":17,"column_start":75,"column_end":84},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113583,"byte_end":113592,"line_start":17,"line_end":17,"column_start":86,"column_end":95},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6029},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113598,"byte_end":113610,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6500},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113612,"byte_end":113616,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6549},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113618,"byte_end":113627,"line_start":18,"line_end":18,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6625},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113629,"byte_end":113638,"line_start":18,"line_end":18,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6688},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113640,"byte_end":113644,"line_start":18,"line_end":18,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6758},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113646,"byte_end":113649,"line_start":18,"line_end":18,"column_start":53,"column_end":56},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114404,"byte_end":114414,"line_start":46,"line_end":46,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6901},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114416,"byte_end":114423,"line_start":46,"line_end":46,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6974},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114425,"byte_end":114432,"line_start":46,"line_end":46,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7128},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114434,"byte_end":114444,"line_start":46,"line_end":46,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7051},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114446,"byte_end":114455,"line_start":46,"line_end":46,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7202},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114457,"byte_end":114467,"line_start":46,"line_end":46,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7328},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114469,"byte_end":114475,"line_start":46,"line_end":46,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7251},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114477,"byte_end":114482,"line_start":46,"line_end":46,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7402},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114484,"byte_end":114490,"line_start":46,"line_end":46,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7739},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114496,"byte_end":114506,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7795},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114508,"byte_end":114517,"line_start":47,"line_end":47,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7546},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114519,"byte_end":114528,"line_start":47,"line_end":47,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7619},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114530,"byte_end":114542,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7689},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114544,"byte_end":114554,"line_start":47,"line_end":47,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7840},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114556,"byte_end":114563,"line_start":47,"line_end":47,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7480},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114565,"byte_end":114575,"line_start":47,"line_end":47,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7472},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114577,"byte_end":114584,"line_start":47,"line_end":47,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7984},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114590,"byte_end":114602,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114604,"byte_end":114616,"line_start":48,"line_end":48,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8060},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114618,"byte_end":114630,"line_start":48,"line_end":48,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7919},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":114632,"byte_end":114641,"line_start":48,"line_end":48,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2030},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115024,"byte_end":115028,"line_start":63,"line_end":63,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8136},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115030,"byte_end":115034,"line_start":63,"line_end":63,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115073,"byte_end":115079,"line_start":66,"line_end":66,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8145},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115081,"byte_end":115087,"line_start":66,"line_end":66,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115124,"byte_end":115129,"line_start":69,"line_end":69,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8154},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115131,"byte_end":115136,"line_start":69,"line_end":69,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115171,"byte_end":115175,"line_start":72,"line_end":72,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8160},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115177,"byte_end":115181,"line_start":72,"line_end":72,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2125},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115222,"byte_end":115229,"line_start":75,"line_end":75,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8202},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115231,"byte_end":115238,"line_start":75,"line_end":75,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115279,"byte_end":115286,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115288,"byte_end":115294,"line_start":78,"line_end":78,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2181},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115333,"byte_end":115339,"line_start":81,"line_end":81,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8208},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115341,"byte_end":115347,"line_start":81,"line_end":81,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115386,"byte_end":115392,"line_start":84,"line_end":84,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8268},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":115394,"byte_end":115400,"line_start":84,"line_end":84,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":11955,"byte_end":11964,"line_start":314,"line_end":314,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":11966,"byte_end":11978,"line_start":314,"line_end":314,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":142},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311380,"byte_end":311391,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":0,"index":2258},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311429,"byte_end":311437,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":0,"index":2259},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311439,"byte_end":311452,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":1,"index":9235},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311485,"byte_end":311492,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":1,"index":34384},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311494,"byte_end":311498,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":1,"index":9245},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311500,"byte_end":311505,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":1,"index":34424},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311507,"byte_end":311515,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":1,"index":34433},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311517,"byte_end":311531,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":15,"index":10},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311563,"byte_end":311568,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":15,"index":13},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311570,"byte_end":311580,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":15,"index":16},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311582,"byte_end":311592,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":15,"index":89},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311598,"byte_end":311607,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":15,"index":55},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311609,"byte_end":311623,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":15,"index":110},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311625,"byte_end":311640,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":2249}},{"kind":"Use","ref_id":{"krate":15,"index":151},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311668,"byte_end":311678,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":2249}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":0,"byte_end":12599,"line_start":1,"line_end":344,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":12},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2277},{"krate":0,"index":2279}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":385,"byte_end":391,"line_start":8,"line_end":8,"column_start":35,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":394,"byte_end":482,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":650,"byte_end":671,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default, clippy ::\n        match_like_matches_macro)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":876,"byte_end":953,"line_start":17,"line_end":17,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":668},{"krate":0,"index":669}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"/ Futures","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":12601,"byte_end":12612,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":12613,"byte_end":12616,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a number of functions for working with `Future`s,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":12617,"byte_end":12691,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ including the [`FutureExt`] trait and the [`TryFutureExt`] trait which add","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":12692,"byte_end":12770,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ methods to `Future` types.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\mod.rs","byte_start":12771,"byte_end":12801,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2490},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":35827,"byte_end":35832,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First(Fut1)","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2492},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":35851,"byte_end":35857,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second(Fut2)","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2494},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":35876,"byte_end":35881,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2487},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":35801,"byte_end":35808,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2492},{"krate":0,"index":2494}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = FlattenProj))","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":35737,"byte_end":35774,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2516},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":35801,"byte_end":35808,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"__Flatten","qualname":"::future::future::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":35737,"byte_end":35774,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40213,"byte_end":40217,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40134,"byte_end":40201,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40102,"byte_end":40116,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40213,"byte_end":40217,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::future::future::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":2571},{"krate":0,"index":2572}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40102,"byte_end":40116,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41994,"byte_end":42004,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40372,"byte_end":40440,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40445,"byte_end":40448,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40453,"byte_end":40521,"line_start":21,"line_end":21,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40526,"byte_end":40571,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40576,"byte_end":40579,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40584,"byte_end":40598,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40603,"byte_end":40606,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40611,"byte_end":40618,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40623,"byte_end":40664,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40669,"byte_end":40700,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40705,"byte_end":40761,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40766,"byte_end":40790,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40795,"byte_end":40830,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40835,"byte_end":40860,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40865,"byte_end":40868,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40873,"byte_end":40922,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40927,"byte_end":40930,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40935,"byte_end":40977,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40982,"byte_end":41021,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41026,"byte_end":41065,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41070,"byte_end":41087,"line_start":39,"line_end":39,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41092,"byte_end":41095,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41100,"byte_end":41170,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41175,"byte_end":41214,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41219,"byte_end":41260,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41265,"byte_end":41291,"line_start":44,"line_end":44,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41296,"byte_end":41299,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41304,"byte_end":41314,"line_start":46,"line_end":46,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41319,"byte_end":41336,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41341,"byte_end":41375,"line_start":48,"line_end":48,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41380,"byte_end":41427,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41432,"byte_end":41481,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41486,"byte_end":41548,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41553,"byte_end":41577,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41582,"byte_end":41625,"line_start":53,"line_end":53,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41630,"byte_end":41687,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41692,"byte_end":41767,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41772,"byte_end":41802,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41807,"byte_end":41824,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41829,"byte_end":41843,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41848,"byte_end":41932,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41937,"byte_end":41946,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41951,"byte_end":41956,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41961,"byte_end":41970,"line_start":62,"line_end":62,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":41975,"byte_end":41982,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":2593},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\map.rs","byte_start":42975,"byte_end":42985,"line_start":13,"line_end":13,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2595},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\map.rs","byte_start":43049,"byte_end":43057,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2590},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\map.rs","byte_start":42957,"byte_end":42960,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        #[pin]\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":2593},{"krate":0,"index":2595}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\map.rs","byte_start":42880,"byte_end":42947,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private(project = MapProj, project_replace = MapProjOwn))","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\map.rs","byte_start":42799,"byte_end":42862,"line_start":9,"line_end":9,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2622},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\map.rs","byte_start":42957,"byte_end":42960,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"__Map","qualname":"::future::future::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":2626},{"krate":0,"index":2627}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\map.rs","byte_start":42799,"byte_end":42862,"line_start":9,"line_end":9,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2652},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":16376,"byte_end":16383,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":2654}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2672},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::future::future::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2676}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2706},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":16634,"byte_end":16647,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":2708}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2726},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__FlattenStream","qualname":"::future::future::_::__FlattenStream","value":"__FlattenStream {  }","parent":null,"children":[{"krate":0,"index":2729},{"krate":0,"index":2730}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":16987,"byte_end":16990,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2765}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2787},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Map","qualname":"::future::future::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":2791},{"krate":0,"index":2792}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2830},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":17197,"byte_end":17207,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":2832}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2850},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__IntoStream","qualname":"::future::future::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":2853},{"krate":0,"index":2854}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2886},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":17413,"byte_end":17420,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":2889}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2911},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapInto","qualname":"::future::future::_::__MapInto","value":"__MapInto {  }","parent":null,"children":[{"krate":0,"index":2915},{"krate":0,"index":2916}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2956},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":17613,"byte_end":17617,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":2960}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2986},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Then","qualname":"::future::future::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":2991},{"krate":0,"index":2992}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":17862,"byte_end":17869,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":3042}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3064},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::future::future::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":3068},{"krate":0,"index":3069}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3107},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":18110,"byte_end":18120,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":3109}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3127},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__NeverError","qualname":"::future::future::_::__NeverError","value":"__NeverError {  }","parent":null,"children":[{"krate":0,"index":3130},{"krate":0,"index":3131}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3161},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":18333,"byte_end":18342,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":3163}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3181},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__UnitError","qualname":"::future::future::_::__UnitError","value":"__UnitError {  }","parent":null,"children":[{"krate":0,"index":3184},{"krate":0,"index":3185}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19324,"byte_end":19333,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19225,"byte_end":19299,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19300,"byte_end":19313,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20165,"byte_end":20168,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19348,"byte_end":19423,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19428,"byte_end":19451,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19456,"byte_end":19459,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19464,"byte_end":19538,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19543,"byte_end":19614,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19619,"byte_end":19681,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19686,"byte_end":19689,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19694,"byte_end":19765,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19770,"byte_end":19841,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19846,"byte_end":19867,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19872,"byte_end":19875,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19880,"byte_end":19894,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19899,"byte_end":19902,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19907,"byte_end":19914,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19919,"byte_end":19960,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19965,"byte_end":20000,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20005,"byte_end":20008,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20013,"byte_end":20042,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20047,"byte_end":20090,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20095,"byte_end":20131,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20136,"byte_end":20145,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20150,"byte_end":20157,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20565,"byte_end":20573,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20338,"byte_end":20413,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20418,"byte_end":20441,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20446,"byte_end":20449,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20454,"byte_end":20532,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20537,"byte_end":20557,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21585,"byte_end":21589,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20732,"byte_end":20808,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20813,"byte_end":20856,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20861,"byte_end":20864,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20869,"byte_end":20940,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":20945,"byte_end":21019,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21024,"byte_end":21040,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21045,"byte_end":21048,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21053,"byte_end":21128,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21133,"byte_end":21144,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21149,"byte_end":21152,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21157,"byte_end":21228,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21233,"byte_end":21259,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21264,"byte_end":21267,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21272,"byte_end":21286,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21291,"byte_end":21294,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21299,"byte_end":21306,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21311,"byte_end":21352,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21357,"byte_end":21392,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21397,"byte_end":21400,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21405,"byte_end":21439,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21444,"byte_end":21509,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21514,"byte_end":21551,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21556,"byte_end":21565,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21570,"byte_end":21577,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22459,"byte_end":22470,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21801,"byte_end":21876,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21881,"byte_end":21902,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21907,"byte_end":21910,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":21915,"byte_end":21995,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22000,"byte_end":22072,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22077,"byte_end":22080,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22085,"byte_end":22099,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22104,"byte_end":22107,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22112,"byte_end":22119,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22124,"byte_end":22165,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22170,"byte_end":22205,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22210,"byte_end":22213,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22218,"byte_end":22232,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22237,"byte_end":22265,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22270,"byte_end":22306,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22311,"byte_end":22323,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22328,"byte_end":22366,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22371,"byte_end":22377,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22382,"byte_end":22385,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22390,"byte_end":22425,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22430,"byte_end":22439,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22444,"byte_end":22451,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23309,"byte_end":23321,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22650,"byte_end":22726,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22731,"byte_end":22752,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22757,"byte_end":22760,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22765,"byte_end":22844,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22849,"byte_end":22921,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22926,"byte_end":22929,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22934,"byte_end":22948,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22953,"byte_end":22956,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22961,"byte_end":22968,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":22973,"byte_end":23014,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23019,"byte_end":23054,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23059,"byte_end":23062,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23067,"byte_end":23081,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23086,"byte_end":23114,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23119,"byte_end":23155,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23160,"byte_end":23172,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23177,"byte_end":23215,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23220,"byte_end":23226,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23231,"byte_end":23234,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23239,"byte_end":23275,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23280,"byte_end":23289,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23294,"byte_end":23301,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24100,"byte_end":24111,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23502,"byte_end":23555,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23560,"byte_end":23563,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23568,"byte_end":23642,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23647,"byte_end":23710,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23715,"byte_end":23718,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23723,"byte_end":23737,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23742,"byte_end":23745,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23750,"byte_end":23757,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23762,"byte_end":23803,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23808,"byte_end":23843,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23848,"byte_end":23883,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23888,"byte_end":23891,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23896,"byte_end":23926,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23931,"byte_end":23969,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":23974,"byte_end":24025,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24030,"byte_end":24066,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24071,"byte_end":24080,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24085,"byte_end":24092,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24976,"byte_end":24983,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24250,"byte_end":24314,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24319,"byte_end":24355,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24360,"byte_end":24363,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24368,"byte_end":24437,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24442,"byte_end":24479,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24484,"byte_end":24487,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24492,"byte_end":24552,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24557,"byte_end":24560,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24565,"byte_end":24636,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24641,"byte_end":24667,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24672,"byte_end":24675,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24680,"byte_end":24694,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24699,"byte_end":24702,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24707,"byte_end":24714,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24719,"byte_end":24760,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24765,"byte_end":24800,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24805,"byte_end":24808,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24813,"byte_end":24859,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24864,"byte_end":24905,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24910,"byte_end":24942,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24947,"byte_end":24956,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":24961,"byte_end":24968,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26088,"byte_end":26102,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25197,"byte_end":25272,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25277,"byte_end":25300,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25305,"byte_end":25308,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25313,"byte_end":25385,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25390,"byte_end":25463,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25468,"byte_end":25482,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25487,"byte_end":25490,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25495,"byte_end":25565,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25570,"byte_end":25588,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25593,"byte_end":25596,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25601,"byte_end":25615,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25620,"byte_end":25623,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25628,"byte_end":25635,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25640,"byte_end":25681,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25686,"byte_end":25721,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25726,"byte_end":25769,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25774,"byte_end":25777,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25782,"byte_end":25822,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25827,"byte_end":25893,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25898,"byte_end":25901,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25906,"byte_end":25959,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":25964,"byte_end":26010,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26015,"byte_end":26054,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26059,"byte_end":26068,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26073,"byte_end":26080,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27190,"byte_end":27194,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26295,"byte_end":26368,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26373,"byte_end":26439,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26444,"byte_end":26462,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26467,"byte_end":26470,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26475,"byte_end":26542,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26547,"byte_end":26612,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26617,"byte_end":26689,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26694,"byte_end":26768,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26773,"byte_end":26799,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26804,"byte_end":26807,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26812,"byte_end":26883,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26888,"byte_end":26963,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":26968,"byte_end":27022,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27027,"byte_end":27030,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27035,"byte_end":27109,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27114,"byte_end":27182,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":28034,"byte_end":28041,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27340,"byte_end":27406,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27411,"byte_end":27414,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27419,"byte_end":27494,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27499,"byte_end":27572,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27577,"byte_end":27646,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27651,"byte_end":27701,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27706,"byte_end":27709,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27714,"byte_end":27728,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27733,"byte_end":27736,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27741,"byte_end":27748,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27753,"byte_end":27794,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27799,"byte_end":27834,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27839,"byte_end":27842,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27847,"byte_end":27876,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27881,"byte_end":27959,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":27964,"byte_end":28000,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":28005,"byte_end":28014,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":28019,"byte_end":28026,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":33202,"byte_end":33212,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":33069,"byte_end":33118,"line_start":538,"line_end":538,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":33123,"byte_end":33194,"line_start":539,"line_end":539,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":33497,"byte_end":33508,"line_start":549,"line_end":549,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":33361,"byte_end":33410,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":33415,"byte_end":33489,"line_start":548,"line_end":548,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":33739,"byte_end":33749,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":33662,"byte_end":33731,"line_start":556,"line_end":556,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":35145,"byte_end":35157,"line_start":595,"line_end":595,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":33885,"byte_end":33957,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":33962,"byte_end":34025,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34030,"byte_end":34033,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34038,"byte_end":34104,"line_start":567,"line_end":567,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34109,"byte_end":34112,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34117,"byte_end":34190,"line_start":569,"line_end":569,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34195,"byte_end":34264,"line_start":570,"line_end":570,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34269,"byte_end":34339,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34344,"byte_end":34347,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34352,"byte_end":34366,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34371,"byte_end":34374,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34379,"byte_end":34386,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34391,"byte_end":34421,"line_start":576,"line_end":576,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34426,"byte_end":34476,"line_start":577,"line_end":577,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34481,"byte_end":34520,"line_start":578,"line_end":578,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34525,"byte_end":34576,"line_start":579,"line_end":579,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34581,"byte_end":34584,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34589,"byte_end":34649,"line_start":581,"line_end":581,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34654,"byte_end":34706,"line_start":582,"line_end":582,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34711,"byte_end":34718,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34723,"byte_end":34726,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34731,"byte_end":34800,"line_start":585,"line_end":585,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34805,"byte_end":34878,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34883,"byte_end":34915,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34920,"byte_end":34923,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34928,"byte_end":34935,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34940,"byte_end":34987,"line_start":590,"line_end":590,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":34992,"byte_end":35031,"line_start":591,"line_end":591,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":35036,"byte_end":35039,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":35044,"byte_end":35125,"line_start":593,"line_end":593,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":35130,"byte_end":35137,"line_start":594,"line_end":594,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3213},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\into_future.rs","byte_start":66077,"byte_end":66087,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\into_future.rs","byte_start":65998,"byte_end":66065,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\into_future.rs","byte_start":65966,"byte_end":65980,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3236},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\into_future.rs","byte_start":66077,"byte_end":66087,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"__IntoFuture","qualname":"::future::try_future::into_future::_::__IntoFuture","value":"__IntoFuture {  }","parent":null,"children":[{"krate":0,"index":3239},{"krate":0,"index":3240}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\into_future.rs","byte_start":65966,"byte_end":65980,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3261},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":66978,"byte_end":66983,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First(Fut1)","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3263},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":67002,"byte_end":67008,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second(Fut2)","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3265},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":67027,"byte_end":67032,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3258},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":66949,"byte_end":66959,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3261},{"krate":0,"index":3263},{"krate":0,"index":3265}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = TryFlattenProj))","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":66882,"byte_end":66922,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3287},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":66949,"byte_end":66959,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"__TryFlatten","qualname":"::future::try_future::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":66882,"byte_end":66922,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3319},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72053,"byte_end":72058,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First(Fut1)","parent":{"krate":0,"index":3316},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72077,"byte_end":72083,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second(Fut2)","parent":{"krate":0,"index":3316},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72102,"byte_end":72107,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":3316},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3316},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72021,"byte_end":72034,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3323}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = TryFlattenErrProj))","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten_err.rs","byte_start":71951,"byte_end":71994,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72021,"byte_end":72034,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"__TryFlattenErr","qualname":"::future::try_future::try_flatten_err::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten_err.rs","byte_start":71951,"byte_end":71994,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":45055,"byte_end":45065,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3380}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3402},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__TryFlatten","qualname":"::future::try_future::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3406},{"krate":0,"index":3407}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3446},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":45313,"byte_end":45326,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3449}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__TryFlattenErr","qualname":"::future::try_future::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3475},{"krate":0,"index":3476}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3514},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":45594,"byte_end":45610,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":3516}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3534},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__TryFlattenStream","qualname":"::future::try_future::_::__TryFlattenStream","value":"__TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":3537},{"krate":0,"index":3538}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3571},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":46198,"byte_end":46205,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":3575}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3601},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__AndThen","qualname":"::future::try_future::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":3606},{"krate":0,"index":3607}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3655},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":46445,"byte_end":46451,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":3659}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3685},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__OrElse","qualname":"::future::try_future::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":3690},{"krate":0,"index":3691}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3738},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":46701,"byte_end":46708,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":3741}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3763},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::future::try_future::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":3767},{"krate":0,"index":3768}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3807},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":46916,"byte_end":46922,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":3810}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3832},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__OkInto","qualname":"::future::try_future::_::__OkInto","value":"__OkInto {  }","parent":null,"children":[{"krate":0,"index":3836},{"krate":0,"index":3837}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3876},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":47141,"byte_end":47150,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":3879}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3901},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::future::try_future::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":3905},{"krate":0,"index":3906}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":47422,"byte_end":47432,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":3948}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3970},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::future::try_future::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":3974},{"krate":0,"index":3975}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":47805,"byte_end":47810,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":4017}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4039},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::future::try_future::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":4043},{"krate":0,"index":4044}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4083},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":48051,"byte_end":48057,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":4086}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4108},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::future::try_future::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":4112},{"krate":0,"index":4113}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4153},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":48314,"byte_end":48325,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":4157}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4183},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapOkOrElse","qualname":"::future::try_future::_::__MapOkOrElse","value":"__MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":4188},{"krate":0,"index":4189}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4236},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":48609,"byte_end":48621,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":4239}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4261},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__UnwrapOrElse","qualname":"::future::try_future::_::__UnwrapOrElse","value":"__UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":4265},{"krate":0,"index":4266}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":48911,"byte_end":48923,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":291}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":48847,"byte_end":48900,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51633,"byte_end":51639,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50261,"byte_end":50319,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50324,"byte_end":50327,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50332,"byte_end":50407,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50412,"byte_end":50482,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50487,"byte_end":50560,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50565,"byte_end":50594,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50599,"byte_end":50602,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50607,"byte_end":50682,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50687,"byte_end":50762,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50767,"byte_end":50814,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50819,"byte_end":50822,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50827,"byte_end":50902,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50907,"byte_end":50933,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50938,"byte_end":50941,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50946,"byte_end":50960,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50965,"byte_end":50968,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50973,"byte_end":50980,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":50985,"byte_end":51023,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51028,"byte_end":51031,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51036,"byte_end":51077,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51082,"byte_end":51127,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51132,"byte_end":51174,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51179,"byte_end":51215,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51220,"byte_end":51229,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51234,"byte_end":51241,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51246,"byte_end":51249,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51254,"byte_end":51326,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51331,"byte_end":51342,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51347,"byte_end":51350,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51355,"byte_end":51362,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51367,"byte_end":51405,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51410,"byte_end":51413,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51418,"byte_end":51459,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51464,"byte_end":51510,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51515,"byte_end":51557,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51562,"byte_end":51599,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51604,"byte_end":51613,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51618,"byte_end":51625,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53198,"byte_end":53212,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51830,"byte_end":51947,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51952,"byte_end":51955,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":51960,"byte_end":52082,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52087,"byte_end":52137,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52142,"byte_end":52145,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52150,"byte_end":52225,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52230,"byte_end":52305,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52310,"byte_end":52357,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52362,"byte_end":52365,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52370,"byte_end":52445,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52450,"byte_end":52525,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52530,"byte_end":52577,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52582,"byte_end":52585,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52590,"byte_end":52665,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52670,"byte_end":52696,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52701,"byte_end":52704,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52709,"byte_end":52723,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52728,"byte_end":52731,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52736,"byte_end":52743,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52748,"byte_end":52786,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52791,"byte_end":52794,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52799,"byte_end":52840,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52845,"byte_end":52890,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52895,"byte_end":52956,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52961,"byte_end":52993,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":52998,"byte_end":53001,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53006,"byte_end":53052,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53057,"byte_end":53118,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53123,"byte_end":53156,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53161,"byte_end":53170,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53175,"byte_end":53182,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53187,"byte_end":53190,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54895,"byte_end":54902,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53446,"byte_end":53502,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53507,"byte_end":53510,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53515,"byte_end":53589,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53594,"byte_end":53655,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53660,"byte_end":53730,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53735,"byte_end":53810,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53815,"byte_end":53850,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53855,"byte_end":53858,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53863,"byte_end":53938,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":53943,"byte_end":54018,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54023,"byte_end":54070,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54075,"byte_end":54078,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54083,"byte_end":54158,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54163,"byte_end":54189,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54194,"byte_end":54197,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54202,"byte_end":54216,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54221,"byte_end":54224,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54229,"byte_end":54236,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54241,"byte_end":54279,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54284,"byte_end":54287,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54292,"byte_end":54333,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54338,"byte_end":54384,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54389,"byte_end":54432,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54437,"byte_end":54474,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54479,"byte_end":54488,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54493,"byte_end":54500,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54505,"byte_end":54508,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54513,"byte_end":54586,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54591,"byte_end":54605,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54610,"byte_end":54613,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54618,"byte_end":54625,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54630,"byte_end":54668,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54673,"byte_end":54676,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54681,"byte_end":54722,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54727,"byte_end":54772,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54777,"byte_end":54820,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54825,"byte_end":54861,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54866,"byte_end":54875,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":54880,"byte_end":54887,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55992,"byte_end":56000,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55095,"byte_end":55165,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55170,"byte_end":55219,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55224,"byte_end":55227,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55232,"byte_end":55295,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55300,"byte_end":55368,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55373,"byte_end":55446,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55451,"byte_end":55527,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55532,"byte_end":55577,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55582,"byte_end":55585,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55590,"byte_end":55665,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55670,"byte_end":55696,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55701,"byte_end":55704,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55709,"byte_end":55723,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55728,"byte_end":55731,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55736,"byte_end":55743,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55748,"byte_end":55786,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55791,"byte_end":55794,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55799,"byte_end":55840,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55845,"byte_end":55896,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55901,"byte_end":55958,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55963,"byte_end":55972,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":55977,"byte_end":55984,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":56296,"byte_end":56303,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":56176,"byte_end":56234,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":56239,"byte_end":56288,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57858,"byte_end":57866,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":56477,"byte_end":56546,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":56551,"byte_end":56625,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":56630,"byte_end":56633,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":56638,"byte_end":56713,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":56718,"byte_end":56788,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":56793,"byte_end":56858,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":56863,"byte_end":56929,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":56934,"byte_end":56968,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":56973,"byte_end":56976,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":56981,"byte_end":57056,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57061,"byte_end":57087,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57092,"byte_end":57095,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57100,"byte_end":57114,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57119,"byte_end":57122,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57127,"byte_end":57134,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57139,"byte_end":57177,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57182,"byte_end":57185,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57190,"byte_end":57231,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57236,"byte_end":57281,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57286,"byte_end":57361,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57366,"byte_end":57402,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57407,"byte_end":57416,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57421,"byte_end":57428,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57433,"byte_end":57436,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57441,"byte_end":57517,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57522,"byte_end":57533,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57538,"byte_end":57541,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57546,"byte_end":57553,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57558,"byte_end":57596,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57601,"byte_end":57604,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57609,"byte_end":57650,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57655,"byte_end":57701,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57706,"byte_end":57782,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57787,"byte_end":57824,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57829,"byte_end":57838,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":57843,"byte_end":57850,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59487,"byte_end":59494,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58120,"byte_end":58185,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58190,"byte_end":58262,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58267,"byte_end":58270,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58275,"byte_end":58350,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58355,"byte_end":58425,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58430,"byte_end":58495,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58500,"byte_end":58576,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58581,"byte_end":58599,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58604,"byte_end":58607,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58612,"byte_end":58687,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58692,"byte_end":58718,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58723,"byte_end":58726,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58731,"byte_end":58745,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58750,"byte_end":58753,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58758,"byte_end":58765,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58770,"byte_end":58808,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58813,"byte_end":58816,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58821,"byte_end":58862,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58867,"byte_end":58913,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58918,"byte_end":58993,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":58998,"byte_end":59035,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59040,"byte_end":59049,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59054,"byte_end":59061,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59066,"byte_end":59069,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59074,"byte_end":59147,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59152,"byte_end":59166,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59171,"byte_end":59174,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59179,"byte_end":59186,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59191,"byte_end":59229,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59234,"byte_end":59237,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59242,"byte_end":59283,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59288,"byte_end":59333,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59338,"byte_end":59412,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59417,"byte_end":59453,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59458,"byte_end":59467,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59472,"byte_end":59479,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60470,"byte_end":60480,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59743,"byte_end":59816,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59821,"byte_end":59824,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59829,"byte_end":59904,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59909,"byte_end":59982,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":59987,"byte_end":60056,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60061,"byte_end":60114,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60119,"byte_end":60122,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60127,"byte_end":60141,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60146,"byte_end":60149,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60154,"byte_end":60161,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60166,"byte_end":60207,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60212,"byte_end":60250,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60255,"byte_end":60258,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60263,"byte_end":60305,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60310,"byte_end":60391,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60396,"byte_end":60436,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60441,"byte_end":60450,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60455,"byte_end":60462,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61406,"byte_end":61417,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60679,"byte_end":60750,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60755,"byte_end":60758,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60763,"byte_end":60838,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60843,"byte_end":60916,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60921,"byte_end":60990,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":60995,"byte_end":61049,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61054,"byte_end":61057,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61062,"byte_end":61076,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61081,"byte_end":61084,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61089,"byte_end":61096,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61101,"byte_end":61142,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61147,"byte_end":61185,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61190,"byte_end":61193,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61198,"byte_end":61241,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61246,"byte_end":61326,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61331,"byte_end":61372,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61377,"byte_end":61386,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61391,"byte_end":61398,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61802,"byte_end":61813,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61621,"byte_end":61696,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61701,"byte_end":61730,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61735,"byte_end":61738,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61743,"byte_end":61794,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62922,"byte_end":62940,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":61978,"byte_end":62053,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62058,"byte_end":62081,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62086,"byte_end":62089,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62094,"byte_end":62166,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62171,"byte_end":62244,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62249,"byte_end":62263,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62268,"byte_end":62271,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62276,"byte_end":62346,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62351,"byte_end":62369,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62374,"byte_end":62377,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62382,"byte_end":62396,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62401,"byte_end":62404,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62409,"byte_end":62416,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62421,"byte_end":62462,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62467,"byte_end":62505,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62510,"byte_end":62556,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62561,"byte_end":62564,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62569,"byte_end":62629,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62634,"byte_end":62713,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62718,"byte_end":62721,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62726,"byte_end":62783,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62788,"byte_end":62840,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62845,"byte_end":62888,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62893,"byte_end":62902,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":62907,"byte_end":62914,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64030,"byte_end":64044,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63200,"byte_end":63270,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63275,"byte_end":63312,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63317,"byte_end":63366,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63371,"byte_end":63374,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63379,"byte_end":63448,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63453,"byte_end":63526,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63531,"byte_end":63601,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63606,"byte_end":63624,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63629,"byte_end":63632,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63637,"byte_end":63705,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63710,"byte_end":63713,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63718,"byte_end":63732,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63737,"byte_end":63740,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63745,"byte_end":63752,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63757,"byte_end":63795,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63800,"byte_end":63803,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63808,"byte_end":63849,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63854,"byte_end":63906,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63911,"byte_end":63958,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":63963,"byte_end":63996,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64001,"byte_end":64010,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64015,"byte_end":64022,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":65298,"byte_end":65309,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64597,"byte_end":64650,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64655,"byte_end":64691,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64696,"byte_end":64699,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64704,"byte_end":64753,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64758,"byte_end":64825,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64830,"byte_end":64843,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64848,"byte_end":64851,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64856,"byte_end":64870,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64875,"byte_end":64878,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64883,"byte_end":64890,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64895,"byte_end":64954,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64959,"byte_end":64962,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64967,"byte_end":64986,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":64991,"byte_end":65009,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":65014,"byte_end":65086,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":65091,"byte_end":65123,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":65128,"byte_end":65135,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":65140,"byte_end":65216,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":65221,"byte_end":65224,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":65229,"byte_end":65278,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":65283,"byte_end":65290,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":65568,"byte_end":65582,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":65465,"byte_end":65538,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":65543,"byte_end":65560,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4302},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":73785,"byte_end":73789,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":4304}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":73651,"byte_end":73688,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":73706,"byte_end":73773,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74330,"byte_end":74334,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":73893,"byte_end":73961,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":73962,"byte_end":73965,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":73966,"byte_end":74029,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74030,"byte_end":74033,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74034,"byte_end":74048,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74049,"byte_end":74052,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74053,"byte_end":74060,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74061,"byte_end":74102,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74103,"byte_end":74127,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74128,"byte_end":74131,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74132,"byte_end":74164,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74165,"byte_end":74192,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74193,"byte_end":74196,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74197,"byte_end":74234,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74235,"byte_end":74259,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74260,"byte_end":74267,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74268,"byte_end":74304,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74305,"byte_end":74314,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74315,"byte_end":74322,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4308},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75100,"byte_end":75107,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":4310}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":74961,"byte_end":75003,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75021,"byte_end":75088,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75626,"byte_end":75633,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75248,"byte_end":75328,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75329,"byte_end":75342,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75343,"byte_end":75346,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75347,"byte_end":75409,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75410,"byte_end":75413,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75414,"byte_end":75428,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75429,"byte_end":75432,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75433,"byte_end":75446,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75447,"byte_end":75488,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75489,"byte_end":75513,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75514,"byte_end":75517,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75518,"byte_end":75553,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75554,"byte_end":75580,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75581,"byte_end":75600,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75601,"byte_end":75610,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75611,"byte_end":75618,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4316},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76436,"byte_end":76442,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":4314},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76401,"byte_end":76431,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4318},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76503,"byte_end":76507,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":4314},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76460,"byte_end":76498,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4321},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76669,"byte_end":76673,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":4314},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76526,"byte_end":76592,"line_start":18,"line_end":18,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76597,"byte_end":76664,"line_start":19,"line_end":19,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":4314},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76372,"byte_end":76381,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":4316},{"krate":0,"index":4318},{"krate":0,"index":4321}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"pin(__private(project = MaybeDoneProj, project_replace = MaybeDoneProjOwn))","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76270,"byte_end":76345,"line_start":11,"line_end":11,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4351},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76372,"byte_end":76381,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"__MaybeDone","qualname":"::future::maybe_done::_::__MaybeDone","value":"__MaybeDone {  }","parent":null,"children":[{"krate":0,"index":4354},{"krate":0,"index":4355}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76270,"byte_end":76345,"line_start":11,"line_end":11,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77139,"byte_end":77149,"line_start":40,"line_end":40,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76678,"byte_end":76715,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76716,"byte_end":76719,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76720,"byte_end":76734,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76735,"byte_end":76738,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76739,"byte_end":76746,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76747,"byte_end":76788,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76789,"byte_end":76813,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76814,"byte_end":76839,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76840,"byte_end":76843,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76844,"byte_end":76893,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76894,"byte_end":76915,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76916,"byte_end":76968,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":76969,"byte_end":77004,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77005,"byte_end":77060,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77061,"byte_end":77113,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77114,"byte_end":77123,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77124,"byte_end":77131,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77566,"byte_end":77576,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77268,"byte_end":77353,"line_start":45,"line_end":45,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77358,"byte_end":77429,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77434,"byte_end":77507,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77512,"byte_end":77540,"line_start":48,"line_end":48,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77545,"byte_end":77554,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77875,"byte_end":77886,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77755,"byte_end":77821,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77826,"byte_end":77849,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77854,"byte_end":77863,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4375},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79426,"byte_end":79432,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":4373},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79391,"byte_end":79421,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4377},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79493,"byte_end":79497,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":4373},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79450,"byte_end":79488,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4380},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79705,"byte_end":79709,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":4373},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79512,"byte_end":79581,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79586,"byte_end":79656,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79661,"byte_end":79700,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":4373},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79356,"byte_end":79368,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Ok),\n\n    /// The empty variant after the result of a [`TryMaybeDone`] has been\n    /// taken using the [`take_output`](TryMaybeDone::take_output) method,\n    /// or if the future returned an error.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":4375},{"krate":0,"index":4377},{"krate":0,"index":4380}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"pin(__private(project = TryMaybeDoneProj, project_replace =\n                TryMaybeDoneProjOwn))","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79248,"byte_end":79329,"line_start":11,"line_end":11,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":4410},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79356,"byte_end":79368,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"__TryMaybeDone","qualname":"::future::try_maybe_done::_::__TryMaybeDone","value":"__TryMaybeDone {  }","parent":null,"children":[{"krate":0,"index":4413},{"krate":0,"index":4414}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79248,"byte_end":79329,"line_start":11,"line_end":11,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79762,"byte_end":79776,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79714,"byte_end":79754,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":80219,"byte_end":80229,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79910,"byte_end":79995,"line_start":30,"line_end":30,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":80000,"byte_end":80071,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":80076,"byte_end":80160,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":80165,"byte_end":80193,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":80198,"byte_end":80207,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":80530,"byte_end":80541,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":80407,"byte_end":80476,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":80481,"byte_end":80504,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":80509,"byte_end":80518,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4432},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\option.rs","byte_start":82581,"byte_end":82593,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\option.rs","byte_start":82502,"byte_end":82569,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\option.rs","byte_start":82463,"byte_end":82477,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4455},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\option.rs","byte_start":82581,"byte_end":82593,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"__OptionFuture","qualname":"::future::option::_::__OptionFuture","value":"__OptionFuture {  }","parent":null,"children":[{"krate":0,"index":4458},{"krate":0,"index":4459}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\option.rs","byte_start":82463,"byte_end":82477,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83555,"byte_end":83561,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":438}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83435,"byte_end":83475,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83476,"byte_end":83543,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":84148,"byte_end":84155,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83612,"byte_end":83683,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83684,"byte_end":83687,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83688,"byte_end":83754,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83755,"byte_end":83758,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83759,"byte_end":83773,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83774,"byte_end":83777,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83778,"byte_end":83785,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83786,"byte_end":83827,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83828,"byte_end":83861,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83862,"byte_end":83901,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83902,"byte_end":83905,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83906,"byte_end":83963,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83964,"byte_end":84007,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":84008,"byte_end":84013,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":84014,"byte_end":84017,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":84018,"byte_end":84059,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":84060,"byte_end":84122,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":84123,"byte_end":84132,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":84133,"byte_end":84140,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4480},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":84875,"byte_end":84880,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":84724,"byte_end":84771,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":84796,"byte_end":84863,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85003,"byte_end":85013,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":84920,"byte_end":84977,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":84982,"byte_end":84991,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85679,"byte_end":85684,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85433,"byte_end":85493,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85494,"byte_end":85497,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85498,"byte_end":85512,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85513,"byte_end":85516,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85517,"byte_end":85524,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85525,"byte_end":85566,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85567,"byte_end":85591,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85592,"byte_end":85595,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85596,"byte_end":85625,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85626,"byte_end":85653,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85654,"byte_end":85663,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85664,"byte_end":85671,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85996,"byte_end":85998,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85730,"byte_end":85797,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85798,"byte_end":85801,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85802,"byte_end":85816,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85817,"byte_end":85820,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85821,"byte_end":85828,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85829,"byte_end":85870,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85871,"byte_end":85895,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85896,"byte_end":85899,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85900,"byte_end":85938,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85939,"byte_end":85970,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85971,"byte_end":85980,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85981,"byte_end":85988,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":86329,"byte_end":86332,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":86062,"byte_end":86128,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":86129,"byte_end":86132,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":86133,"byte_end":86147,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":86148,"byte_end":86151,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":86152,"byte_end":86159,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":86160,"byte_end":86201,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":86202,"byte_end":86226,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":86227,"byte_end":86230,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":86231,"byte_end":86270,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":86271,"byte_end":86303,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":86304,"byte_end":86313,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":86314,"byte_end":86321,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4582},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":88584,"byte_end":88588,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":4585},{"krate":0,"index":4586}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86820,"byte_end":86887,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86797,"byte_end":86811,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4610},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86797,"byte_end":86811,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join","qualname":"::future::join::_::__Join","value":"__Join {  }","parent":null,"children":[{"krate":0,"index":4614},{"krate":0,"index":4615},{"krate":0,"index":4616}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86797,"byte_end":86811,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4635},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":88654,"byte_end":88659,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86820,"byte_end":86887,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86797,"byte_end":86811,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4671},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86797,"byte_end":86811,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join3","qualname":"::future::join::_::__Join3","value":"__Join3 {  }","parent":null,"children":[{"krate":0,"index":4676},{"krate":0,"index":4677},{"krate":0,"index":4678},{"krate":0,"index":4679}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86797,"byte_end":86811,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4702},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":88731,"byte_end":88736,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":4707},{"krate":0,"index":4708},{"krate":0,"index":4709},{"krate":0,"index":4710}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86820,"byte_end":86887,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86797,"byte_end":86811,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4746},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86797,"byte_end":86811,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join4","qualname":"::future::join::_::__Join4","value":"__Join4 {  }","parent":null,"children":[{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4756}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86797,"byte_end":86811,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4783},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":88814,"byte_end":88819,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":4789},{"krate":0,"index":4790},{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4793}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86820,"byte_end":86887,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86797,"byte_end":86811,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4835},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86797,"byte_end":86811,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join5","qualname":"::future::join::_::__Join5","value":"__Join5 {  }","parent":null,"children":[{"krate":0,"index":4842},{"krate":0,"index":4843},{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":86797,"byte_end":86811,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89434,"byte_end":89438,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":88857,"byte_end":88928,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":88929,"byte_end":88932,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":88933,"byte_end":89004,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89005,"byte_end":89080,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89081,"byte_end":89084,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89085,"byte_end":89154,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89155,"byte_end":89181,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89182,"byte_end":89185,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89186,"byte_end":89200,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89201,"byte_end":89204,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89205,"byte_end":89212,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89213,"byte_end":89254,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89255,"byte_end":89279,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89280,"byte_end":89283,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89284,"byte_end":89308,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89309,"byte_end":89333,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89334,"byte_end":89368,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89369,"byte_end":89372,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89373,"byte_end":89408,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89409,"byte_end":89418,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89419,"byte_end":89426,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89984,"byte_end":89989,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89645,"byte_end":89697,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89698,"byte_end":89701,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89702,"byte_end":89716,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89717,"byte_end":89720,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89721,"byte_end":89728,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89729,"byte_end":89770,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89771,"byte_end":89795,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89796,"byte_end":89799,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89800,"byte_end":89824,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89825,"byte_end":89849,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89850,"byte_end":89874,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89875,"byte_end":89914,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89915,"byte_end":89918,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89919,"byte_end":89958,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89959,"byte_end":89968,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":89969,"byte_end":89976,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90572,"byte_end":90577,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90202,"byte_end":90254,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90255,"byte_end":90258,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90259,"byte_end":90273,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90274,"byte_end":90277,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90278,"byte_end":90285,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90286,"byte_end":90327,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90328,"byte_end":90352,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90353,"byte_end":90356,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90357,"byte_end":90381,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90382,"byte_end":90406,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90407,"byte_end":90431,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90432,"byte_end":90456,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90457,"byte_end":90499,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90500,"byte_end":90503,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90504,"byte_end":90546,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90547,"byte_end":90556,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90557,"byte_end":90564,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":91249,"byte_end":91254,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90848,"byte_end":90900,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90901,"byte_end":90904,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90905,"byte_end":90919,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90920,"byte_end":90923,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90924,"byte_end":90931,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90932,"byte_end":90973,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90974,"byte_end":90998,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":90999,"byte_end":91002,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":91003,"byte_end":91027,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":91028,"byte_end":91052,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":91053,"byte_end":91077,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":91078,"byte_end":91102,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":91103,"byte_end":91127,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":91128,"byte_end":91173,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":91174,"byte_end":91177,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":91178,"byte_end":91223,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":91224,"byte_end":91233,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\join.rs","byte_start":91234,"byte_end":91241,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4878},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":91872,"byte_end":91878,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":4881}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":91734,"byte_end":91775,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":91776,"byte_end":91843,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":94026,"byte_end":94032,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":91969,"byte_end":92039,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92040,"byte_end":92043,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92044,"byte_end":92122,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92123,"byte_end":92199,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92200,"byte_end":92272,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92273,"byte_end":92276,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92277,"byte_end":92349,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92350,"byte_end":92378,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92379,"byte_end":92382,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92383,"byte_end":92450,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92451,"byte_end":92515,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92516,"byte_end":92566,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92567,"byte_end":92570,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92571,"byte_end":92585,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92586,"byte_end":92589,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92590,"byte_end":92610,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92611,"byte_end":92614,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92615,"byte_end":92622,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92623,"byte_end":92664,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, Either};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92665,"byte_end":92705,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92706,"byte_end":92731,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92732,"byte_end":92735,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92736,"byte_end":92826,"line_start":37,"line_end":37,"column_start":1,"column_end":91}},{"value":"/ let future1 = async { 1 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92827,"byte_end":92857,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ let future2 = async { 2 };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92858,"byte_end":92888,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92889,"byte_end":92892,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92893,"byte_end":92939,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92940,"byte_end":92962,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92963,"byte_end":92985,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92986,"byte_end":92989,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":92990,"byte_end":93052,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1, // `value1` is resolved from `future1`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93053,"byte_end":93136,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/                                          // `_` represents `future2`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93137,"byte_end":93209,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93210,"byte_end":93294,"line_start":48,"line_end":48,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93295,"byte_end":93368,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93369,"byte_end":93375,"line_start":50,"line_end":50,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93376,"byte_end":93379,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 1 || value == 2);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93380,"byte_end":93418,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93419,"byte_end":93428,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93429,"byte_end":93436,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93437,"byte_end":93440,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93441,"byte_end":93467,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93468,"byte_end":93471,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93472,"byte_end":93479,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93480,"byte_end":93539,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93540,"byte_end":93543,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93544,"byte_end":93597,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93598,"byte_end":93601,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93602,"byte_end":93677,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93678,"byte_end":93710,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93711,"byte_end":93743,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93744,"byte_end":93749,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93750,"byte_end":93794,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93795,"byte_end":93821,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93822,"byte_end":93899,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93900,"byte_end":93979,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93980,"byte_end":93993,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":93994,"byte_end":94004,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":94005,"byte_end":94010,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":94011,"byte_end":94018,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4956},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":97878,"byte_end":97885,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":4959},{"krate":0,"index":4960}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95455,"byte_end":95522,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95432,"byte_end":95446,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4984},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95432,"byte_end":95446,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin","qualname":"::future::try_join::_::__TryJoin","value":"__TryJoin {  }","parent":null,"children":[{"krate":0,"index":4988},{"krate":0,"index":4989},{"krate":0,"index":4990}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95432,"byte_end":95446,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5009},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":97955,"byte_end":97963,"line_start":96,"line_end":96,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5015}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95455,"byte_end":95522,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95432,"byte_end":95446,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5045},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95432,"byte_end":95446,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin3","qualname":"::future::try_join::_::__TryJoin3","value":"__TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":5050},{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5053}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95432,"byte_end":95446,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5076},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98039,"byte_end":98047,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":5081},{"krate":0,"index":5082},{"krate":0,"index":5083},{"krate":0,"index":5084}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95455,"byte_end":95522,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95432,"byte_end":95446,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5120},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95432,"byte_end":95446,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin4","qualname":"::future::try_join::_::__TryJoin4","value":"__TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":5126},{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":5129},{"krate":0,"index":5130}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95432,"byte_end":95446,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5157},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98129,"byte_end":98137,"line_start":102,"line_end":102,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":5163},{"krate":0,"index":5164},{"krate":0,"index":5165},{"krate":0,"index":5166},{"krate":0,"index":5167}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95455,"byte_end":95522,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95432,"byte_end":95446,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5209},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95432,"byte_end":95446,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin5","qualname":"::future::try_join::_::__TryJoin5","value":"__TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5220},{"krate":0,"index":5221}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":95432,"byte_end":95446,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99409,"byte_end":99417,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98175,"byte_end":98248,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98249,"byte_end":98281,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98282,"byte_end":98285,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98286,"byte_end":98357,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98358,"byte_end":98434,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98435,"byte_end":98506,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98507,"byte_end":98523,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98524,"byte_end":98527,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98528,"byte_end":98597,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98598,"byte_end":98624,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98625,"byte_end":98628,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98629,"byte_end":98643,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98644,"byte_end":98647,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98648,"byte_end":98724,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98725,"byte_end":98761,"line_start":119,"line_end":119,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98762,"byte_end":98765,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98766,"byte_end":98773,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98774,"byte_end":98815,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98816,"byte_end":98840,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98841,"byte_end":98844,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98845,"byte_end":98890,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98891,"byte_end":98936,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98937,"byte_end":98975,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98976,"byte_end":98979,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":98980,"byte_end":99019,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99020,"byte_end":99029,"line_start":130,"line_end":130,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99030,"byte_end":99037,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99038,"byte_end":99041,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99042,"byte_end":99112,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99113,"byte_end":99128,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99129,"byte_end":99132,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99133,"byte_end":99140,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99141,"byte_end":99182,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99183,"byte_end":99207,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99208,"byte_end":99211,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99212,"byte_end":99257,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99258,"byte_end":99304,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99305,"byte_end":99343,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99344,"byte_end":99347,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99348,"byte_end":99383,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99384,"byte_end":99393,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99394,"byte_end":99401,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100010,"byte_end":100019,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99592,"byte_end":99652,"line_start":155,"line_end":155,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99653,"byte_end":99656,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99657,"byte_end":99671,"line_start":157,"line_end":157,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99672,"byte_end":99675,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99676,"byte_end":99683,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99684,"byte_end":99725,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99726,"byte_end":99750,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99751,"byte_end":99754,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99755,"byte_end":99800,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99801,"byte_end":99846,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99847,"byte_end":99892,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99893,"byte_end":99936,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99937,"byte_end":99940,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99941,"byte_end":99984,"line_start":168,"line_end":168,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99985,"byte_end":99994,"line_start":169,"line_end":169,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":99995,"byte_end":100002,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100759,"byte_end":100768,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100289,"byte_end":100349,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100350,"byte_end":100353,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100354,"byte_end":100368,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100369,"byte_end":100372,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100373,"byte_end":100380,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100381,"byte_end":100422,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100423,"byte_end":100447,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100448,"byte_end":100451,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100452,"byte_end":100497,"line_start":192,"line_end":192,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100498,"byte_end":100543,"line_start":193,"line_end":193,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100544,"byte_end":100589,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100590,"byte_end":100635,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100636,"byte_end":100682,"line_start":196,"line_end":196,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100683,"byte_end":100686,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100687,"byte_end":100733,"line_start":198,"line_end":198,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100734,"byte_end":100743,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":100744,"byte_end":100751,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101642,"byte_end":101651,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101120,"byte_end":101180,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101181,"byte_end":101184,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101185,"byte_end":101199,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101200,"byte_end":101203,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101204,"byte_end":101211,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101212,"byte_end":101253,"line_start":221,"line_end":221,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101254,"byte_end":101278,"line_start":222,"line_end":222,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101279,"byte_end":101282,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101283,"byte_end":101328,"line_start":224,"line_end":224,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101329,"byte_end":101374,"line_start":225,"line_end":225,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101375,"byte_end":101420,"line_start":226,"line_end":226,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101421,"byte_end":101466,"line_start":227,"line_end":227,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101467,"byte_end":101512,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101513,"byte_end":101562,"line_start":229,"line_end":229,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101563,"byte_end":101566,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101567,"byte_end":101616,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101617,"byte_end":101626,"line_start":232,"line_end":232,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_join.rs","byte_start":101627,"byte_end":101634,"line_start":233,"line_end":233,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5252},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102379,"byte_end":102388,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":5255}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102237,"byte_end":102282,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102283,"byte_end":102350,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103973,"byte_end":103983,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102482,"byte_end":102552,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102553,"byte_end":102556,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102557,"byte_end":102635,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102636,"byte_end":102712,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102713,"byte_end":102785,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102786,"byte_end":102789,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102790,"byte_end":102862,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102863,"byte_end":102891,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102892,"byte_end":102895,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102896,"byte_end":102963,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102964,"byte_end":103035,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103036,"byte_end":103086,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103087,"byte_end":103090,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103091,"byte_end":103105,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103106,"byte_end":103109,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103110,"byte_end":103117,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103118,"byte_end":103202,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103203,"byte_end":103206,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103207,"byte_end":103264,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103265,"byte_end":103268,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103269,"byte_end":103351,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103352,"byte_end":103409,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103410,"byte_end":103467,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103468,"byte_end":103494,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103495,"byte_end":103500,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103501,"byte_end":103596,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103597,"byte_end":103620,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103621,"byte_end":103701,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103702,"byte_end":103783,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103784,"byte_end":103854,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103855,"byte_end":103926,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103927,"byte_end":103940,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103941,"byte_end":103951,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103952,"byte_end":103957,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":103958,"byte_end":103965,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5263},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105589,"byte_end":105593,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":5260},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105556,"byte_end":105584,"line_start":14,"line_end":14,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5265},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105643,"byte_end":105648,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":5260},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105609,"byte_end":105638,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105537,"byte_end":105543,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(\n         #[pin]\n         A),\n\n    /// Second branch of the type\n    Right(\n          #[pin]\n          B),\n}","parent":null,"children":[{"krate":0,"index":5263},{"krate":0,"index":5265}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"pin(__private(project = EitherProj))","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105467,"byte_end":105503,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5285},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105537,"byte_end":105543,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"__Either","qualname":"::future::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":5289},{"krate":0,"index":5290},{"krate":0,"index":5291}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105467,"byte_end":105503,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105854,"byte_end":105866,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105706,"byte_end":105764,"line_start":21,"line_end":21,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105769,"byte_end":105772,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105777,"byte_end":105842,"line_start":23,"line_end":23,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":106246,"byte_end":106259,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":106097,"byte_end":106155,"line_start":33,"line_end":33,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":106160,"byte_end":106163,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":106168,"byte_end":106234,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":106547,"byte_end":106557,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":106474,"byte_end":106535,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"/ Streams","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":112941,"byte_end":112952,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":112953,"byte_end":112956,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a number of functions for working with `Stream`s,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":112957,"byte_end":113031,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ including the [`StreamExt`] trait and the [`TryStreamExt`] trait which add","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113032,"byte_end":113110,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ methods to `Stream` types","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\mod.rs","byte_start":113111,"byte_end":113140,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":5318},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\chain.rs","byte_start":165117,"byte_end":165122,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5321},{"krate":0,"index":5322}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\chain.rs","byte_start":165057,"byte_end":165105,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\chain.rs","byte_start":165025,"byte_end":165039,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5346},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\chain.rs","byte_start":165117,"byte_end":165122,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::stream::stream::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5352}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\chain.rs","byte_start":165025,"byte_end":165039,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5375},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\collect.rs","byte_start":167223,"byte_end":167230,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":5379},{"krate":0,"index":5378}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\collect.rs","byte_start":167144,"byte_end":167211,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\collect.rs","byte_start":167112,"byte_end":167126,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5403},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\collect.rs","byte_start":167223,"byte_end":167230,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Collect","qualname":"::stream::stream::collect::_::__Collect","value":"__Collect {  }","parent":null,"children":[{"krate":0,"index":5407},{"krate":0,"index":5408}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\collect.rs","byte_start":167112,"byte_end":167126,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5431},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\concat.rs","byte_start":168616,"byte_end":168622,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":5434},{"krate":0,"index":5433}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\concat.rs","byte_start":168537,"byte_end":168604,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\concat.rs","byte_start":168505,"byte_end":168519,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5454},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\concat.rs","byte_start":168616,"byte_end":168622,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Concat","qualname":"::stream::stream::concat::_::__Concat","value":"__Concat {  }","parent":null,"children":[{"krate":0,"index":5457},{"krate":0,"index":5458}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\concat.rs","byte_start":168505,"byte_end":168519,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5476},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\cycle.rs","byte_start":170313,"byte_end":170318,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":5478},{"krate":0,"index":5479}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\cycle.rs","byte_start":170253,"byte_end":170301,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\cycle.rs","byte_start":170221,"byte_end":170235,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5499},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\cycle.rs","byte_start":170313,"byte_end":170318,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"__Cycle","qualname":"::stream::stream::cycle::_::__Cycle","value":"__Cycle {  }","parent":null,"children":[{"krate":0,"index":5502},{"krate":0,"index":5503}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\cycle.rs","byte_start":170221,"byte_end":170235,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5521},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\enumerate.rs","byte_start":171934,"byte_end":171943,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5524},{"krate":0,"index":5523}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\enumerate.rs","byte_start":171874,"byte_end":171922,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\enumerate.rs","byte_start":171842,"byte_end":171856,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5544},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\enumerate.rs","byte_start":171934,"byte_end":171943,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"__Enumerate","qualname":"::stream::stream::enumerate::_::__Enumerate","value":"__Enumerate {  }","parent":null,"children":[{"krate":0,"index":5547},{"krate":0,"index":5548}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\enumerate.rs","byte_start":171842,"byte_end":171856,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5570},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter.rs","byte_start":173571,"byte_end":173577,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5576},{"krate":0,"index":5574},{"krate":0,"index":5577},{"krate":0,"index":5575}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter.rs","byte_start":173511,"byte_end":173559,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter.rs","byte_start":173496,"byte_end":173510,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5609},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter.rs","byte_start":173571,"byte_end":173577,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"__Filter","qualname":"::stream::stream::filter::_::__Filter","value":"__Filter {  }","parent":null,"children":[{"krate":0,"index":5614},{"krate":0,"index":5615},{"krate":0,"index":5616}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter.rs","byte_start":173496,"byte_end":173510,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5643},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter_map.rs","byte_start":177003,"byte_end":177012,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5648},{"krate":0,"index":5647},{"krate":0,"index":5649}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter_map.rs","byte_start":176943,"byte_end":176991,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter_map.rs","byte_start":176928,"byte_end":176942,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5679},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter_map.rs","byte_start":177003,"byte_end":177012,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__FilterMap","qualname":"::stream::stream::filter_map::_::__FilterMap","value":"__FilterMap {  }","parent":null,"children":[{"krate":0,"index":5684},{"krate":0,"index":5685},{"krate":0,"index":5686}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter_map.rs","byte_start":176928,"byte_end":176942,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5713},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\flatten.rs","byte_start":180011,"byte_end":180018,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5716},{"krate":0,"index":5717}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\flatten.rs","byte_start":179951,"byte_end":179999,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\flatten.rs","byte_start":179919,"byte_end":179933,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5741},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\flatten.rs","byte_start":180011,"byte_end":180018,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Flatten","qualname":"::stream::stream::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":5745},{"krate":0,"index":5746},{"krate":0,"index":5747}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\flatten.rs","byte_start":179919,"byte_end":179933,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5776},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":117643,"byte_end":117650,"line_start":56,"line_end":56,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5778}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5796},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::stream::stream::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":5799},{"krate":0,"index":5800}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5835},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fold.rs","byte_start":181771,"byte_end":181775,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":5842},{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5843}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fold.rs","byte_start":181692,"byte_end":181759,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fold.rs","byte_start":181677,"byte_end":181691,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5879},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fold.rs","byte_start":181771,"byte_end":181775,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"__Fold","qualname":"::stream::stream::fold::_::__Fold","value":"__Fold {  }","parent":null,"children":[{"krate":0,"index":5885},{"krate":0,"index":5886},{"krate":0,"index":5887}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fold.rs","byte_start":181677,"byte_end":181691,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5914},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\for_each.rs","byte_start":184266,"byte_end":184273,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":5919},{"krate":0,"index":5918},{"krate":0,"index":5920}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\for_each.rs","byte_start":184187,"byte_end":184254,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\for_each.rs","byte_start":184172,"byte_end":184186,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5950},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\for_each.rs","byte_start":184266,"byte_end":184273,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__ForEach","qualname":"::stream::stream::for_each::_::__ForEach","value":"__ForEach {  }","parent":null,"children":[{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5957}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\for_each.rs","byte_start":184172,"byte_end":184186,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5980},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186227,"byte_end":186231,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":5983},{"krate":0,"index":5982}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186167,"byte_end":186215,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186135,"byte_end":186149,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6003},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186227,"byte_end":186231,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::stream::stream::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":6006},{"krate":0,"index":6007}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186135,"byte_end":186149,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186665,"byte_end":186672,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186396,"byte_end":186458,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186463,"byte_end":186466,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186471,"byte_end":186539,"line_start":25,"line_end":25,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186544,"byte_end":186610,"line_start":26,"line_end":26,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186615,"byte_end":186653,"line_start":27,"line_end":27,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":6029},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188029,"byte_end":188041,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":6031}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":187859,"byte_end":187932,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":187950,"byte_end":188017,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188604,"byte_end":188611,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188212,"byte_end":188285,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188290,"byte_end":188307,"line_start":20,"line_end":20,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188312,"byte_end":188315,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188320,"byte_end":188401,"line_start":22,"line_end":22,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188406,"byte_end":188488,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188493,"byte_end":188572,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188577,"byte_end":188592,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189222,"byte_end":189229,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188676,"byte_end":188743,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188748,"byte_end":188779,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188784,"byte_end":188787,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188792,"byte_end":188865,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188870,"byte_end":188925,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188930,"byte_end":188933,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188938,"byte_end":189019,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189024,"byte_end":189106,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189111,"byte_end":189190,"line_start":38,"line_end":38,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189195,"byte_end":189210,"line_start":39,"line_end":39,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189855,"byte_end":189866,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189302,"byte_end":189376,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189381,"byte_end":189412,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189417,"byte_end":189420,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189425,"byte_end":189498,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189503,"byte_end":189558,"line_start":48,"line_end":48,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189563,"byte_end":189566,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189571,"byte_end":189652,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189657,"byte_end":189739,"line_start":51,"line_end":51,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189744,"byte_end":189823,"line_start":52,"line_end":52,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189828,"byte_end":189843,"line_start":53,"line_end":53,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":190499,"byte_end":190509,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":189979,"byte_end":190041,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":190046,"byte_end":190049,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":190054,"byte_end":190126,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":190131,"byte_end":190202,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":190207,"byte_end":190210,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":190215,"byte_end":190296,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":190301,"byte_end":190383,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":190388,"byte_end":190467,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":190472,"byte_end":190487,"line_start":66,"line_end":66,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6038},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":118770,"byte_end":118777,"line_start":93,"line_end":93,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":6041}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6063},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::stream::stream::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":6067},{"krate":0,"index":6068}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6112},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\map.rs","byte_start":191514,"byte_end":191517,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":6116},{"krate":0,"index":6115}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\map.rs","byte_start":191454,"byte_end":191502,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\map.rs","byte_start":191439,"byte_end":191453,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6140},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\map.rs","byte_start":191514,"byte_end":191517,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"__Map","qualname":"::stream::stream::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":6144},{"krate":0,"index":6145}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\map.rs","byte_start":191439,"byte_end":191453,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6172},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":119138,"byte_end":119145,"line_start":104,"line_end":104,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":6176}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6202},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__FlatMap","qualname":"::stream::stream::_::__FlatMap","value":"__FlatMap {  }","parent":null,"children":[{"krate":0,"index":6207},{"krate":0,"index":6208}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6261},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\next.rs","byte_start":193226,"byte_end":193230,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":6264}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\next.rs","byte_start":193070,"byte_end":193129,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\next.rs","byte_start":193147,"byte_end":193214,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6269},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\select_next_some.rs","byte_start":194236,"byte_end":194250,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":6272}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\select_next_some.rs","byte_start":194052,"byte_end":194127,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\select_next_some.rs","byte_start":194128,"byte_end":194139,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\select_next_some.rs","byte_start":194157,"byte_end":194224,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6277},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":195723,"byte_end":195731,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":6280},{"krate":0,"index":6279}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":195663,"byte_end":195711,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":195631,"byte_end":195645,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6300},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":195723,"byte_end":195731,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"__Peekable","qualname":"::stream::stream::peek::_::__Peekable","value":"__Peekable {  }","parent":null,"children":[{"krate":0,"index":6303},{"krate":0,"index":6304}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":195631,"byte_end":195645,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":196186,"byte_end":196190,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":196031,"byte_end":196104,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":196109,"byte_end":196174,"line_start":36,"line_end":36,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":196515,"byte_end":196524,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":196277,"byte_end":196339,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":196344,"byte_end":196347,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":196352,"byte_end":196425,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":196430,"byte_end":196503,"line_start":44,"line_end":44,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":6326},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":198234,"byte_end":198238,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":6329}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":198174,"byte_end":198222,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":198159,"byte_end":198173,"line_start":104,"line_end":104,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6351},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":198234,"byte_end":198238,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"__Peek","qualname":"::stream::stream::peek::_::__Peek","value":"__Peek {  }","parent":null,"children":[{"krate":0,"index":6355},{"krate":0,"index":6356}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":198159,"byte_end":198173,"line_start":104,"line_end":104,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6375},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip.rs","byte_start":199490,"byte_end":199494,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":6378},{"krate":0,"index":6377}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip.rs","byte_start":199430,"byte_end":199478,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip.rs","byte_start":199398,"byte_end":199412,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6398},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip.rs","byte_start":199490,"byte_end":199494,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Skip","qualname":"::stream::stream::skip::_::__Skip","value":"__Skip {  }","parent":null,"children":[{"krate":0,"index":6401},{"krate":0,"index":6402}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip.rs","byte_start":199398,"byte_end":199412,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6424},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip_while.rs","byte_start":201336,"byte_end":201345,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":6431},{"krate":0,"index":6428},{"krate":0,"index":6432},{"krate":0,"index":6429},{"krate":0,"index":6430}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip_while.rs","byte_start":201276,"byte_end":201324,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip_while.rs","byte_start":201261,"byte_end":201275,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6466},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip_while.rs","byte_start":201336,"byte_end":201345,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__SkipWhile","qualname":"::stream::stream::skip_while::_::__SkipWhile","value":"__SkipWhile {  }","parent":null,"children":[{"krate":0,"index":6471},{"krate":0,"index":6472},{"krate":0,"index":6473}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip_while.rs","byte_start":201261,"byte_end":201275,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6500},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take.rs","byte_start":204909,"byte_end":204913,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6503},{"krate":0,"index":6502}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take.rs","byte_start":204849,"byte_end":204897,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take.rs","byte_start":204817,"byte_end":204831,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6523},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take.rs","byte_start":204909,"byte_end":204913,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::stream::stream::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":6526},{"krate":0,"index":6527}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take.rs","byte_start":204817,"byte_end":204831,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6549},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_while.rs","byte_start":206944,"byte_end":206953,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":6556},{"krate":0,"index":6553},{"krate":0,"index":6557},{"krate":0,"index":6554},{"krate":0,"index":6555}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_while.rs","byte_start":206884,"byte_end":206932,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_while.rs","byte_start":206869,"byte_end":206883,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6591},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_while.rs","byte_start":206944,"byte_end":206953,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__TakeWhile","qualname":"::stream::stream::take_while::_::__TakeWhile","value":"__TakeWhile {  }","parent":null,"children":[{"krate":0,"index":6596},{"krate":0,"index":6597},{"krate":0,"index":6598}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_while.rs","byte_start":206869,"byte_end":206883,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6625},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":210485,"byte_end":210494,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":6630},{"krate":0,"index":6631},{"krate":0,"index":6628},{"krate":0,"index":6629}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":210425,"byte_end":210473,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":210410,"byte_end":210424,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6659},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":210485,"byte_end":210494,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"__TakeUntil","qualname":"::stream::stream::take_until::_::__TakeUntil","value":"__TakeUntil {  }","parent":null,"children":[{"krate":0,"index":6663},{"krate":0,"index":6664},{"krate":0,"index":6665}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":210410,"byte_end":210424,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":211832,"byte_end":211843,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":211532,"byte_end":211586,"line_start":58,"line_end":58,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":211591,"byte_end":211685,"line_start":59,"line_end":59,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":211690,"byte_end":211753,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":211758,"byte_end":211820,"line_start":61,"line_end":61,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":213127,"byte_end":213138,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":211980,"byte_end":212045,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212050,"byte_end":212107,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212112,"byte_end":212115,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212120,"byte_end":212185,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212190,"byte_end":212250,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212255,"byte_end":212258,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resovled yet,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212263,"byte_end":212331,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212336,"byte_end":212379,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212384,"byte_end":212387,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212392,"byte_end":212406,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212411,"byte_end":212414,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212419,"byte_end":212426,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212431,"byte_end":212472,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212477,"byte_end":212501,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212506,"byte_end":212549,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212554,"byte_end":212582,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212587,"byte_end":212590,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212595,"byte_end":212633,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212638,"byte_end":212641,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212646,"byte_end":212664,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212669,"byte_end":212711,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212716,"byte_end":212731,"line_start":91,"line_end":91,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212736,"byte_end":212755,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212760,"byte_end":212785,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212790,"byte_end":212806,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212811,"byte_end":212844,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212849,"byte_end":212858,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212863,"byte_end":212870,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212875,"byte_end":212878,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212883,"byte_end":212932,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212937,"byte_end":212991,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":212996,"byte_end":212999,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":213004,"byte_end":213051,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":213056,"byte_end":213089,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":213094,"byte_end":213103,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":213108,"byte_end":213115,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":213314,"byte_end":213324,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":213217,"byte_end":213278,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":213283,"byte_end":213302,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6688},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\then.rs","byte_start":215214,"byte_end":215218,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":6693},{"krate":0,"index":6694},{"krate":0,"index":6692}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\then.rs","byte_start":215154,"byte_end":215202,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\then.rs","byte_start":215139,"byte_end":215153,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6724},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\then.rs","byte_start":215214,"byte_end":215218,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Then","qualname":"::stream::stream::then::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":6729},{"krate":0,"index":6730},{"krate":0,"index":6731}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\then.rs","byte_start":215139,"byte_end":215153,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6758},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":217848,"byte_end":217851,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":6763},{"krate":0,"index":6764},{"krate":0,"index":6761},{"krate":0,"index":6762}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":217788,"byte_end":217836,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":217756,"byte_end":217770,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6792},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":217848,"byte_end":217851,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"__Zip","qualname":"::stream::stream::zip::_::__Zip","value":"__Zip {  }","parent":null,"children":[{"krate":0,"index":6796},{"krate":0,"index":6797},{"krate":0,"index":6798}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":217756,"byte_end":217770,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218396,"byte_end":218403,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218288,"byte_end":218362,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218367,"byte_end":218384,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218759,"byte_end":218766,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218497,"byte_end":218565,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218570,"byte_end":218601,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218606,"byte_end":218609,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218614,"byte_end":218687,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218692,"byte_end":218747,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":219141,"byte_end":219152,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218872,"byte_end":218947,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218952,"byte_end":218983,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218988,"byte_end":218991,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218996,"byte_end":219069,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":219074,"byte_end":219129,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":219558,"byte_end":219568,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":219322,"byte_end":219385,"line_start":56,"line_end":56,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":219390,"byte_end":219393,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":219398,"byte_end":219470,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":219475,"byte_end":219546,"line_start":59,"line_end":59,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6821},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":222381,"byte_end":222385,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":6827},{"krate":0,"index":6826},{"krate":0,"index":6828}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":222321,"byte_end":222369,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":222306,"byte_end":222320,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6862},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":222381,"byte_end":222385,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"__Scan","qualname":"::stream::stream::scan::_::__Scan","value":"__Scan {  }","parent":null,"children":[{"krate":0,"index":6868},{"krate":0,"index":6869},{"krate":0,"index":6870}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":222306,"byte_end":222320,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122460,"byte_end":122469,"line_start":206,"line_end":206,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1449},{"krate":0,"index":1452},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1471},{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1476}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122349,"byte_end":122423,"line_start":204,"line_end":204,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122424,"byte_end":122449,"line_start":205,"line_end":205,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123379,"byte_end":123383,"line_start":230,"line_end":230,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122484,"byte_end":122550,"line_start":207,"line_end":207,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122555,"byte_end":122558,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122563,"byte_end":122631,"line_start":209,"line_end":209,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122636,"byte_end":122711,"line_start":210,"line_end":210,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122716,"byte_end":122791,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122796,"byte_end":122850,"line_start":212,"line_end":212,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122855,"byte_end":122930,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122935,"byte_end":122945,"line_start":214,"line_end":214,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122950,"byte_end":122953,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122958,"byte_end":122972,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122977,"byte_end":122980,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122985,"byte_end":122992,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122997,"byte_end":123038,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123043,"byte_end":123086,"line_start":220,"line_end":220,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123091,"byte_end":123094,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123099,"byte_end":123140,"line_start":222,"line_end":222,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123145,"byte_end":123148,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123153,"byte_end":123198,"line_start":224,"line_end":224,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123203,"byte_end":123248,"line_start":225,"line_end":225,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123253,"byte_end":123298,"line_start":226,"line_end":226,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123303,"byte_end":123345,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123350,"byte_end":123359,"line_start":228,"line_end":228,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123364,"byte_end":123371,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124622,"byte_end":124633,"line_start":265,"line_end":265,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123525,"byte_end":123597,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123602,"byte_end":123663,"line_start":238,"line_end":238,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123668,"byte_end":123671,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123676,"byte_end":123751,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123756,"byte_end":123810,"line_start":241,"line_end":241,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123815,"byte_end":123818,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123823,"byte_end":123896,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123901,"byte_end":123963,"line_start":244,"line_end":244,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":123968,"byte_end":124043,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124048,"byte_end":124102,"line_start":246,"line_end":246,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124107,"byte_end":124182,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124187,"byte_end":124197,"line_start":248,"line_end":248,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124202,"byte_end":124205,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124210,"byte_end":124224,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124229,"byte_end":124232,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124237,"byte_end":124244,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124249,"byte_end":124290,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124295,"byte_end":124338,"line_start":254,"line_end":254,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124343,"byte_end":124346,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124351,"byte_end":124388,"line_start":256,"line_end":256,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124393,"byte_end":124396,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124401,"byte_end":124453,"line_start":258,"line_end":258,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124458,"byte_end":124488,"line_start":259,"line_end":259,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124493,"byte_end":124496,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124501,"byte_end":124553,"line_start":261,"line_end":261,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124558,"byte_end":124588,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124593,"byte_end":124602,"line_start":263,"line_end":263,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124607,"byte_end":124614,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125634,"byte_end":125637,"line_start":295,"line_end":295,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124798,"byte_end":124873,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124878,"byte_end":124901,"line_start":273,"line_end":273,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124906,"byte_end":124909,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124914,"byte_end":124986,"line_start":275,"line_end":275,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":124991,"byte_end":125055,"line_start":276,"line_end":276,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125060,"byte_end":125097,"line_start":277,"line_end":277,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125102,"byte_end":125105,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125110,"byte_end":125186,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125191,"byte_end":125262,"line_start":280,"line_end":280,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125267,"byte_end":125288,"line_start":281,"line_end":281,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125293,"byte_end":125296,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125301,"byte_end":125315,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125320,"byte_end":125323,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125328,"byte_end":125335,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125340,"byte_end":125381,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125386,"byte_end":125429,"line_start":287,"line_end":287,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125434,"byte_end":125437,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125442,"byte_end":125479,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125484,"byte_end":125523,"line_start":290,"line_end":290,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125528,"byte_end":125531,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125536,"byte_end":125600,"line_start":292,"line_end":292,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125605,"byte_end":125614,"line_start":293,"line_end":293,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125619,"byte_end":125626,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127197,"byte_end":127206,"line_start":341,"line_end":341,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125804,"byte_end":125875,"line_start":303,"line_end":303,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125880,"byte_end":125899,"line_start":304,"line_end":304,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125904,"byte_end":125907,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125912,"byte_end":125977,"line_start":306,"line_end":306,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":125982,"byte_end":126051,"line_start":307,"line_end":307,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126056,"byte_end":126067,"line_start":308,"line_end":308,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126072,"byte_end":126075,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126080,"byte_end":126155,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126160,"byte_end":126242,"line_start":311,"line_end":311,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126247,"byte_end":126265,"line_start":312,"line_end":312,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126270,"byte_end":126273,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126278,"byte_end":126301,"line_start":314,"line_end":314,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126306,"byte_end":126309,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126314,"byte_end":126389,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126394,"byte_end":126481,"line_start":317,"line_end":317,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126486,"byte_end":126542,"line_start":318,"line_end":318,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126547,"byte_end":126550,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126555,"byte_end":126567,"line_start":320,"line_end":320,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126572,"byte_end":126575,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126580,"byte_end":126649,"line_start":322,"line_end":322,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126654,"byte_end":126679,"line_start":323,"line_end":323,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126684,"byte_end":126687,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126692,"byte_end":126706,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126711,"byte_end":126714,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126719,"byte_end":126726,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126731,"byte_end":126772,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126777,"byte_end":126820,"line_start":329,"line_end":329,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126825,"byte_end":126828,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126833,"byte_end":126884,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126889,"byte_end":126892,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126897,"byte_end":126937,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126942,"byte_end":126945,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":126950,"byte_end":127002,"line_start":335,"line_end":335,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127007,"byte_end":127059,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127064,"byte_end":127116,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127121,"byte_end":127163,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127168,"byte_end":127177,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127182,"byte_end":127189,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128435,"byte_end":128441,"line_start":374,"line_end":374,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127350,"byte_end":127422,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127427,"byte_end":127454,"line_start":349,"line_end":349,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127459,"byte_end":127462,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127467,"byte_end":127542,"line_start":351,"line_end":351,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127547,"byte_end":127618,"line_start":352,"line_end":352,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127623,"byte_end":127695,"line_start":353,"line_end":353,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127700,"byte_end":127774,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127779,"byte_end":127837,"line_start":355,"line_end":355,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127842,"byte_end":127845,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127850,"byte_end":127926,"line_start":357,"line_end":357,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":127931,"byte_end":128005,"line_start":358,"line_end":358,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128010,"byte_end":128031,"line_start":359,"line_end":359,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128036,"byte_end":128039,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128044,"byte_end":128058,"line_start":361,"line_end":361,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128063,"byte_end":128066,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128071,"byte_end":128078,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128083,"byte_end":128124,"line_start":364,"line_end":364,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128129,"byte_end":128153,"line_start":365,"line_end":365,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128158,"byte_end":128201,"line_start":366,"line_end":366,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128206,"byte_end":128209,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128214,"byte_end":128252,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128257,"byte_end":128318,"line_start":369,"line_end":369,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128323,"byte_end":128326,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128331,"byte_end":128401,"line_start":371,"line_end":371,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128406,"byte_end":128415,"line_start":372,"line_end":372,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128420,"byte_end":128427,"line_start":373,"line_end":373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129766,"byte_end":129776,"line_start":408,"line_end":408,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128669,"byte_end":128744,"line_start":383,"line_end":383,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128749,"byte_end":128825,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128830,"byte_end":128833,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128838,"byte_end":128913,"line_start":386,"line_end":386,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128918,"byte_end":128993,"line_start":387,"line_end":387,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":128998,"byte_end":129074,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129079,"byte_end":129144,"line_start":389,"line_end":389,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129149,"byte_end":129152,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129157,"byte_end":129233,"line_start":391,"line_end":391,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129238,"byte_end":129312,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129317,"byte_end":129342,"line_start":393,"line_end":393,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129347,"byte_end":129350,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129355,"byte_end":129369,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129374,"byte_end":129381,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129386,"byte_end":129427,"line_start":397,"line_end":397,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129432,"byte_end":129475,"line_start":398,"line_end":398,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129480,"byte_end":129483,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129488,"byte_end":129526,"line_start":400,"line_end":400,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129531,"byte_end":129581,"line_start":401,"line_end":401,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129586,"byte_end":129637,"line_start":402,"line_end":402,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129642,"byte_end":129649,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129654,"byte_end":129657,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129662,"byte_end":129732,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129737,"byte_end":129746,"line_start":406,"line_end":406,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":129751,"byte_end":129758,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130805,"byte_end":130809,"line_start":439,"line_end":439,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130008,"byte_end":130081,"line_start":417,"line_end":417,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130086,"byte_end":130114,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130119,"byte_end":130122,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130127,"byte_end":130201,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130206,"byte_end":130273,"line_start":421,"line_end":421,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130278,"byte_end":130323,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130328,"byte_end":130331,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130336,"byte_end":130412,"line_start":424,"line_end":424,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130417,"byte_end":130443,"line_start":425,"line_end":425,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130448,"byte_end":130451,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130456,"byte_end":130470,"line_start":427,"line_end":427,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130475,"byte_end":130478,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130483,"byte_end":130490,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130495,"byte_end":130536,"line_start":430,"line_end":430,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130541,"byte_end":130584,"line_start":431,"line_end":431,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130589,"byte_end":130592,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130597,"byte_end":130634,"line_start":433,"line_end":433,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130639,"byte_end":130694,"line_start":434,"line_end":434,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130699,"byte_end":130702,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130707,"byte_end":130771,"line_start":436,"line_end":436,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130776,"byte_end":130785,"line_start":437,"line_end":437,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":130790,"byte_end":130797,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131743,"byte_end":131750,"line_start":473,"line_end":473,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131018,"byte_end":131072,"line_start":448,"line_end":448,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131077,"byte_end":131132,"line_start":449,"line_end":449,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131137,"byte_end":131140,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131145,"byte_end":131213,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131218,"byte_end":131221,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131226,"byte_end":131240,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131245,"byte_end":131248,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131253,"byte_end":131260,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131265,"byte_end":131306,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131311,"byte_end":131342,"line_start":457,"line_end":457,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131347,"byte_end":131382,"line_start":458,"line_end":458,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131387,"byte_end":131407,"line_start":459,"line_end":459,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131412,"byte_end":131415,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131420,"byte_end":131457,"line_start":461,"line_end":461,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131462,"byte_end":131465,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131470,"byte_end":131497,"line_start":463,"line_end":463,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131502,"byte_end":131526,"line_start":464,"line_end":464,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131531,"byte_end":131573,"line_start":465,"line_end":465,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131578,"byte_end":131587,"line_start":466,"line_end":466,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131592,"byte_end":131599,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131604,"byte_end":131607,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131612,"byte_end":131660,"line_start":469,"line_end":469,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131665,"byte_end":131709,"line_start":470,"line_end":470,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131714,"byte_end":131723,"line_start":471,"line_end":471,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131728,"byte_end":131735,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132943,"byte_end":132949,"line_start":512,"line_end":512,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131908,"byte_end":131970,"line_start":480,"line_end":480,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":131975,"byte_end":132039,"line_start":481,"line_end":481,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132044,"byte_end":132047,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132052,"byte_end":132116,"line_start":483,"line_end":483,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132121,"byte_end":132186,"line_start":484,"line_end":484,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132191,"byte_end":132237,"line_start":485,"line_end":485,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132242,"byte_end":132245,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132250,"byte_end":132299,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132304,"byte_end":132344,"line_start":488,"line_end":488,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132349,"byte_end":132352,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132357,"byte_end":132371,"line_start":490,"line_end":490,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132376,"byte_end":132379,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132384,"byte_end":132391,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132396,"byte_end":132437,"line_start":493,"line_end":493,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132442,"byte_end":132473,"line_start":494,"line_end":494,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132478,"byte_end":132513,"line_start":495,"line_end":495,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132518,"byte_end":132538,"line_start":496,"line_end":496,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132543,"byte_end":132546,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132551,"byte_end":132588,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132593,"byte_end":132596,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132601,"byte_end":132628,"line_start":500,"line_end":500,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132633,"byte_end":132664,"line_start":501,"line_end":501,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132669,"byte_end":132695,"line_start":502,"line_end":502,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132700,"byte_end":132766,"line_start":503,"line_end":503,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132771,"byte_end":132780,"line_start":504,"line_end":504,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132785,"byte_end":132792,"line_start":505,"line_end":505,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132797,"byte_end":132800,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132805,"byte_end":132840,"line_start":507,"line_end":507,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132845,"byte_end":132848,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132853,"byte_end":132909,"line_start":509,"line_end":509,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132914,"byte_end":132923,"line_start":510,"line_end":510,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":132928,"byte_end":132935,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134013,"byte_end":134018,"line_start":543,"line_end":543,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133179,"byte_end":133210,"line_start":520,"line_end":520,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133215,"byte_end":133218,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133223,"byte_end":133290,"line_start":522,"line_end":522,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133295,"byte_end":133367,"line_start":523,"line_end":523,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133372,"byte_end":133429,"line_start":524,"line_end":524,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133434,"byte_end":133437,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133442,"byte_end":133456,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133461,"byte_end":133464,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133469,"byte_end":133476,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133481,"byte_end":133522,"line_start":529,"line_end":529,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133527,"byte_end":133570,"line_start":530,"line_end":530,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133575,"byte_end":133597,"line_start":531,"line_end":531,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133602,"byte_end":133649,"line_start":532,"line_end":532,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133654,"byte_end":133657,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133662,"byte_end":133703,"line_start":534,"line_end":534,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133708,"byte_end":133749,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133754,"byte_end":133795,"line_start":536,"line_end":536,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133800,"byte_end":133841,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133846,"byte_end":133887,"line_start":538,"line_end":538,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133892,"byte_end":133933,"line_start":539,"line_end":539,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133938,"byte_end":133979,"line_start":540,"line_end":540,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133984,"byte_end":133993,"line_start":541,"line_end":541,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":133998,"byte_end":134005,"line_start":542,"line_end":542,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134968,"byte_end":134972,"line_start":570,"line_end":570,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134153,"byte_end":134220,"line_start":550,"line_end":550,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134225,"byte_end":134277,"line_start":551,"line_end":551,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134282,"byte_end":134285,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134290,"byte_end":134360,"line_start":553,"line_end":553,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134365,"byte_end":134441,"line_start":554,"line_end":554,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134446,"byte_end":134522,"line_start":555,"line_end":555,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134527,"byte_end":134597,"line_start":556,"line_end":556,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134602,"byte_end":134628,"line_start":557,"line_end":557,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134633,"byte_end":134636,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134641,"byte_end":134655,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134660,"byte_end":134663,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134668,"byte_end":134675,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134680,"byte_end":134721,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134726,"byte_end":134769,"line_start":563,"line_end":563,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134774,"byte_end":134777,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134782,"byte_end":134825,"line_start":565,"line_end":565,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134830,"byte_end":134899,"line_start":566,"line_end":566,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134904,"byte_end":134934,"line_start":567,"line_end":567,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134939,"byte_end":134948,"line_start":568,"line_end":568,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":134953,"byte_end":134960,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136166,"byte_end":136173,"line_start":610,"line_end":610,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135207,"byte_end":135272,"line_start":579,"line_end":579,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135277,"byte_end":135280,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135285,"byte_end":135299,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135304,"byte_end":135307,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135312,"byte_end":135319,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135324,"byte_end":135365,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135370,"byte_end":135401,"line_start":585,"line_end":585,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135406,"byte_end":135441,"line_start":586,"line_end":586,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135446,"byte_end":135466,"line_start":587,"line_end":587,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135471,"byte_end":135474,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135479,"byte_end":135518,"line_start":589,"line_end":589,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135523,"byte_end":135562,"line_start":590,"line_end":590,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135567,"byte_end":135606,"line_start":591,"line_end":591,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135611,"byte_end":135614,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135619,"byte_end":135646,"line_start":593,"line_end":593,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135651,"byte_end":135690,"line_start":594,"line_end":594,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135695,"byte_end":135734,"line_start":595,"line_end":595,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135739,"byte_end":135746,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135751,"byte_end":135778,"line_start":597,"line_end":597,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135783,"byte_end":135822,"line_start":598,"line_end":598,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135827,"byte_end":135866,"line_start":599,"line_end":599,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135871,"byte_end":135878,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135883,"byte_end":135910,"line_start":601,"line_end":601,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135915,"byte_end":135956,"line_start":602,"line_end":602,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":135961,"byte_end":136002,"line_start":603,"line_end":603,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136007,"byte_end":136014,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136019,"byte_end":136022,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136027,"byte_end":136086,"line_start":606,"line_end":606,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136091,"byte_end":136132,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136137,"byte_end":136146,"line_start":608,"line_end":608,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136151,"byte_end":136158,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137435,"byte_end":137443,"line_start":643,"line_end":643,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136350,"byte_end":136422,"line_start":618,"line_end":618,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136427,"byte_end":136430,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136435,"byte_end":136512,"line_start":620,"line_end":620,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136517,"byte_end":136592,"line_start":621,"line_end":621,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136597,"byte_end":136673,"line_start":622,"line_end":622,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136678,"byte_end":136681,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136686,"byte_end":136768,"line_start":624,"line_end":624,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136773,"byte_end":136856,"line_start":625,"line_end":625,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136861,"byte_end":136864,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136869,"byte_end":136945,"line_start":627,"line_end":627,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":136950,"byte_end":137026,"line_start":628,"line_end":628,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137031,"byte_end":137052,"line_start":629,"line_end":629,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137057,"byte_end":137060,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137065,"byte_end":137079,"line_start":631,"line_end":631,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137084,"byte_end":137087,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137092,"byte_end":137099,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137104,"byte_end":137145,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137150,"byte_end":137193,"line_start":635,"line_end":635,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137198,"byte_end":137201,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137206,"byte_end":137243,"line_start":637,"line_end":637,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137248,"byte_end":137315,"line_start":638,"line_end":638,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137320,"byte_end":137323,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137328,"byte_end":137401,"line_start":640,"line_end":640,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137406,"byte_end":137415,"line_start":641,"line_end":641,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137420,"byte_end":137427,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138426,"byte_end":138430,"line_start":676,"line_end":676,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137617,"byte_end":137688,"line_start":652,"line_end":652,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137693,"byte_end":137723,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137728,"byte_end":137731,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137736,"byte_end":137811,"line_start":655,"line_end":655,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137816,"byte_end":137887,"line_start":656,"line_end":656,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137892,"byte_end":137932,"line_start":657,"line_end":657,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137937,"byte_end":137940,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137945,"byte_end":137959,"line_start":659,"line_end":659,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137964,"byte_end":137967,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137972,"byte_end":137979,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":137984,"byte_end":138025,"line_start":662,"line_end":662,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138030,"byte_end":138054,"line_start":663,"line_end":663,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138059,"byte_end":138102,"line_start":664,"line_end":664,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138107,"byte_end":138110,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138115,"byte_end":138153,"line_start":666,"line_end":666,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138158,"byte_end":138161,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138166,"byte_end":138210,"line_start":668,"line_end":668,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138215,"byte_end":138235,"line_start":669,"line_end":669,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138240,"byte_end":138303,"line_start":670,"line_end":670,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138308,"byte_end":138315,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138320,"byte_end":138323,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138328,"byte_end":138392,"line_start":673,"line_end":673,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138397,"byte_end":138406,"line_start":674,"line_end":674,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138411,"byte_end":138418,"line_start":675,"line_end":675,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139454,"byte_end":139464,"line_start":707,"line_end":707,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138676,"byte_end":138750,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138755,"byte_end":138778,"line_start":686,"line_end":686,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138783,"byte_end":138786,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138791,"byte_end":138864,"line_start":688,"line_end":688,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138869,"byte_end":138941,"line_start":689,"line_end":689,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":138946,"byte_end":139023,"line_start":690,"line_end":690,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139028,"byte_end":139039,"line_start":691,"line_end":691,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139044,"byte_end":139047,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139052,"byte_end":139066,"line_start":693,"line_end":693,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139071,"byte_end":139074,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139079,"byte_end":139086,"line_start":695,"line_end":695,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139091,"byte_end":139132,"line_start":696,"line_end":696,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139137,"byte_end":139161,"line_start":697,"line_end":697,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139166,"byte_end":139209,"line_start":698,"line_end":698,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139214,"byte_end":139217,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139222,"byte_end":139260,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139265,"byte_end":139268,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139273,"byte_end":139336,"line_start":702,"line_end":702,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139341,"byte_end":139344,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139349,"byte_end":139420,"line_start":704,"line_end":704,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139425,"byte_end":139434,"line_start":705,"line_end":705,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139439,"byte_end":139446,"line_start":706,"line_end":706,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140453,"byte_end":140463,"line_start":737,"line_end":737,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139698,"byte_end":139774,"line_start":716,"line_end":716,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139779,"byte_end":139802,"line_start":717,"line_end":717,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139807,"byte_end":139810,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139815,"byte_end":139890,"line_start":719,"line_end":719,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139895,"byte_end":139967,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":139972,"byte_end":140039,"line_start":721,"line_end":721,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140044,"byte_end":140047,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140052,"byte_end":140066,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140071,"byte_end":140074,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140079,"byte_end":140086,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140091,"byte_end":140132,"line_start":726,"line_end":726,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140137,"byte_end":140161,"line_start":727,"line_end":727,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140166,"byte_end":140209,"line_start":728,"line_end":728,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140214,"byte_end":140217,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140222,"byte_end":140260,"line_start":730,"line_end":730,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140265,"byte_end":140268,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140273,"byte_end":140336,"line_start":732,"line_end":732,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140341,"byte_end":140344,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140349,"byte_end":140419,"line_start":734,"line_end":734,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140424,"byte_end":140433,"line_start":735,"line_end":735,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140438,"byte_end":140445,"line_start":736,"line_end":736,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141979,"byte_end":141989,"line_start":782,"line_end":782,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140697,"byte_end":140767,"line_start":746,"line_end":746,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140772,"byte_end":140775,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140780,"byte_end":140851,"line_start":748,"line_end":748,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140856,"byte_end":140928,"line_start":749,"line_end":749,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":140933,"byte_end":141003,"line_start":750,"line_end":750,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141008,"byte_end":141011,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141016,"byte_end":141087,"line_start":752,"line_end":752,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be aceessed with `TakeUntil::take_result()`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141092,"byte_end":141178,"line_start":753,"line_end":753,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141183,"byte_end":141250,"line_start":754,"line_end":754,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141255,"byte_end":141319,"line_start":755,"line_end":755,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141324,"byte_end":141327,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141332,"byte_end":141346,"line_start":757,"line_end":757,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141351,"byte_end":141354,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141359,"byte_end":141366,"line_start":759,"line_end":759,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141371,"byte_end":141412,"line_start":760,"line_end":760,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141417,"byte_end":141441,"line_start":761,"line_end":761,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141446,"byte_end":141489,"line_start":762,"line_end":762,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141494,"byte_end":141522,"line_start":763,"line_end":763,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141527,"byte_end":141530,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141535,"byte_end":141573,"line_start":765,"line_end":765,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141578,"byte_end":141581,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141586,"byte_end":141604,"line_start":767,"line_end":767,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141609,"byte_end":141651,"line_start":768,"line_end":768,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141656,"byte_end":141671,"line_start":769,"line_end":769,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141676,"byte_end":141695,"line_start":770,"line_end":770,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141700,"byte_end":141725,"line_start":771,"line_end":771,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141730,"byte_end":141746,"line_start":772,"line_end":772,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141751,"byte_end":141778,"line_start":773,"line_end":773,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141783,"byte_end":141792,"line_start":774,"line_end":774,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141797,"byte_end":141804,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141809,"byte_end":141812,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141817,"byte_end":141862,"line_start":777,"line_end":777,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141867,"byte_end":141870,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141875,"byte_end":141945,"line_start":779,"line_end":779,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141950,"byte_end":141959,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":141964,"byte_end":141971,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":143196,"byte_end":143204,"line_start":823,"line_end":823,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142138,"byte_end":142209,"line_start":790,"line_end":790,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142214,"byte_end":142257,"line_start":791,"line_end":791,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142262,"byte_end":142265,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142270,"byte_end":142345,"line_start":793,"line_end":793,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142350,"byte_end":142420,"line_start":794,"line_end":794,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142425,"byte_end":142463,"line_start":795,"line_end":795,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142468,"byte_end":142471,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142476,"byte_end":142551,"line_start":797,"line_end":797,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142556,"byte_end":142599,"line_start":798,"line_end":798,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142604,"byte_end":142607,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142612,"byte_end":142685,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142690,"byte_end":142733,"line_start":801,"line_end":801,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142738,"byte_end":142741,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142746,"byte_end":142760,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142765,"byte_end":142768,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142773,"byte_end":142780,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142785,"byte_end":142826,"line_start":806,"line_end":806,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142831,"byte_end":142855,"line_start":807,"line_end":807,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142860,"byte_end":142903,"line_start":808,"line_end":808,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142908,"byte_end":142911,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142916,"byte_end":142934,"line_start":810,"line_end":810,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142939,"byte_end":142942,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142947,"byte_end":142952,"line_start":812,"line_end":812,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":142957,"byte_end":143018,"line_start":813,"line_end":813,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":143023,"byte_end":143045,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":143050,"byte_end":143079,"line_start":815,"line_end":815,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":143084,"byte_end":143095,"line_start":816,"line_end":816,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":143100,"byte_end":143118,"line_start":817,"line_end":817,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":143123,"byte_end":143128,"line_start":818,"line_end":818,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":143133,"byte_end":143136,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":143141,"byte_end":143162,"line_start":820,"line_end":820,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":143167,"byte_end":143176,"line_start":821,"line_end":821,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":143181,"byte_end":143188,"line_start":822,"line_end":822,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146254,"byte_end":146258,"line_start":908,"line_end":908,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":145746,"byte_end":145817,"line_start":892,"line_end":892,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":145822,"byte_end":145825,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":145830,"byte_end":145903,"line_start":894,"line_end":894,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":145908,"byte_end":145943,"line_start":895,"line_end":895,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":145948,"byte_end":145951,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":145956,"byte_end":145970,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":145975,"byte_end":145978,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":145983,"byte_end":145990,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":145995,"byte_end":146036,"line_start":900,"line_end":900,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146041,"byte_end":146084,"line_start":901,"line_end":901,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146089,"byte_end":146092,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146097,"byte_end":146143,"line_start":903,"line_end":903,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146148,"byte_end":146151,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146156,"byte_end":146220,"line_start":905,"line_end":905,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146225,"byte_end":146234,"line_start":906,"line_end":906,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146239,"byte_end":146246,"line_start":907,"line_end":907,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146923,"byte_end":146927,"line_start":931,"line_end":931,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146396,"byte_end":146468,"line_start":915,"line_end":915,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146473,"byte_end":146476,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146481,"byte_end":146554,"line_start":917,"line_end":917,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146559,"byte_end":146605,"line_start":918,"line_end":918,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146610,"byte_end":146613,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146618,"byte_end":146632,"line_start":920,"line_end":920,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146637,"byte_end":146640,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146645,"byte_end":146652,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146657,"byte_end":146698,"line_start":923,"line_end":923,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146703,"byte_end":146746,"line_start":924,"line_end":924,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146751,"byte_end":146754,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146759,"byte_end":146805,"line_start":926,"line_end":926,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146810,"byte_end":146813,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146818,"byte_end":146889,"line_start":928,"line_end":928,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146894,"byte_end":146903,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":146908,"byte_end":146915,"line_start":930,"line_end":930,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148548,"byte_end":148552,"line_start":977,"line_end":977,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147065,"byte_end":147136,"line_start":938,"line_end":938,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147141,"byte_end":147214,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147219,"byte_end":147257,"line_start":940,"line_end":940,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147262,"byte_end":147265,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147270,"byte_end":147324,"line_start":942,"line_end":942,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147329,"byte_end":147401,"line_start":943,"line_end":943,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147406,"byte_end":147482,"line_start":944,"line_end":944,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147487,"byte_end":147555,"line_start":945,"line_end":945,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147560,"byte_end":147636,"line_start":946,"line_end":946,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147641,"byte_end":147663,"line_start":947,"line_end":947,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147668,"byte_end":147671,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147676,"byte_end":147743,"line_start":949,"line_end":949,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147748,"byte_end":147816,"line_start":950,"line_end":950,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147821,"byte_end":147834,"line_start":951,"line_end":951,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147839,"byte_end":147842,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147847,"byte_end":147861,"line_start":953,"line_end":953,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147866,"byte_end":147869,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147874,"byte_end":147881,"line_start":955,"line_end":955,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147886,"byte_end":147929,"line_start":956,"line_end":956,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147934,"byte_end":147977,"line_start":957,"line_end":957,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":147982,"byte_end":148010,"line_start":958,"line_end":958,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148015,"byte_end":148018,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148023,"byte_end":148041,"line_start":960,"line_end":960,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148046,"byte_end":148084,"line_start":961,"line_end":961,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148089,"byte_end":148104,"line_start":962,"line_end":962,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148109,"byte_end":148126,"line_start":963,"line_end":963,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148131,"byte_end":148173,"line_start":964,"line_end":964,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148178,"byte_end":148213,"line_start":965,"line_end":965,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148218,"byte_end":148262,"line_start":966,"line_end":966,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148267,"byte_end":148276,"line_start":967,"line_end":967,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148281,"byte_end":148295,"line_start":968,"line_end":968,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148300,"byte_end":148303,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148308,"byte_end":148351,"line_start":970,"line_end":970,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148356,"byte_end":148393,"line_start":971,"line_end":971,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148398,"byte_end":148435,"line_start":972,"line_end":972,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148440,"byte_end":148474,"line_start":973,"line_end":973,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148479,"byte_end":148513,"line_start":974,"line_end":974,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148518,"byte_end":148528,"line_start":975,"line_end":975,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148533,"byte_end":148540,"line_start":976,"line_end":976,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149481,"byte_end":149487,"line_start":1010,"line_end":1010,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148677,"byte_end":148724,"line_start":984,"line_end":984,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148729,"byte_end":148732,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148737,"byte_end":148811,"line_start":986,"line_end":986,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148816,"byte_end":148853,"line_start":987,"line_end":987,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148858,"byte_end":148861,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148866,"byte_end":148880,"line_start":989,"line_end":989,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148885,"byte_end":148888,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148893,"byte_end":148900,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148905,"byte_end":148946,"line_start":992,"line_end":992,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148951,"byte_end":148994,"line_start":993,"line_end":993,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":148999,"byte_end":149002,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149007,"byte_end":149047,"line_start":995,"line_end":995,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149052,"byte_end":149055,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149060,"byte_end":149089,"line_start":997,"line_end":997,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149094,"byte_end":149122,"line_start":998,"line_end":998,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149127,"byte_end":149184,"line_start":999,"line_end":999,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149189,"byte_end":149216,"line_start":1000,"line_end":1000,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149221,"byte_end":149244,"line_start":1001,"line_end":1001,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149249,"byte_end":149252,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149257,"byte_end":149292,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149297,"byte_end":149325,"line_start":1004,"line_end":1004,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149330,"byte_end":149387,"line_start":1005,"line_end":1005,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149392,"byte_end":149419,"line_start":1006,"line_end":1006,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149424,"byte_end":149447,"line_start":1007,"line_end":1007,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149452,"byte_end":149461,"line_start":1008,"line_end":1008,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":149466,"byte_end":149473,"line_start":1009,"line_end":1009,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155687,"byte_end":155690,"line_start":1177,"line_end":1177,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":154999,"byte_end":155047,"line_start":1155,"line_end":1155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155052,"byte_end":155055,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155060,"byte_end":155133,"line_start":1157,"line_end":1157,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155138,"byte_end":155210,"line_start":1158,"line_end":1158,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155215,"byte_end":155228,"line_start":1159,"line_end":1159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155233,"byte_end":155236,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155241,"byte_end":155255,"line_start":1161,"line_end":1161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155260,"byte_end":155263,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155268,"byte_end":155275,"line_start":1163,"line_end":1163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155280,"byte_end":155321,"line_start":1164,"line_end":1164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155326,"byte_end":155369,"line_start":1165,"line_end":1165,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155374,"byte_end":155377,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155382,"byte_end":155420,"line_start":1167,"line_end":1167,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155425,"byte_end":155464,"line_start":1168,"line_end":1168,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155469,"byte_end":155472,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155477,"byte_end":155511,"line_start":1170,"line_end":1170,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155516,"byte_end":155557,"line_start":1171,"line_end":1171,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155562,"byte_end":155590,"line_start":1172,"line_end":1172,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155595,"byte_end":155645,"line_start":1173,"line_end":1173,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155650,"byte_end":155659,"line_start":1174,"line_end":1174,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155664,"byte_end":155671,"line_start":1175,"line_end":1175,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155676,"byte_end":155679,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156598,"byte_end":156603,"line_start":1208,"line_end":1208,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155871,"byte_end":155908,"line_start":1185,"line_end":1185,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155913,"byte_end":155916,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155921,"byte_end":155992,"line_start":1187,"line_end":1187,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":155997,"byte_end":156073,"line_start":1188,"line_end":1188,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156078,"byte_end":156081,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156086,"byte_end":156093,"line_start":1190,"line_end":1190,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156098,"byte_end":156139,"line_start":1191,"line_end":1191,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156144,"byte_end":156187,"line_start":1192,"line_end":1192,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156192,"byte_end":156195,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156200,"byte_end":156257,"line_start":1194,"line_end":1194,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156262,"byte_end":156318,"line_start":1195,"line_end":1195,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156323,"byte_end":156326,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156331,"byte_end":156371,"line_start":1197,"line_end":1197,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156376,"byte_end":156379,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156384,"byte_end":156432,"line_start":1199,"line_end":1199,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156437,"byte_end":156465,"line_start":1200,"line_end":1200,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156470,"byte_end":156485,"line_start":1201,"line_end":1201,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156490,"byte_end":156509,"line_start":1202,"line_end":1202,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156514,"byte_end":156532,"line_start":1203,"line_end":1203,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156537,"byte_end":156552,"line_start":1204,"line_end":1204,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156557,"byte_end":156564,"line_start":1205,"line_end":1205,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156569,"byte_end":156578,"line_start":1206,"line_end":1206,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156583,"byte_end":156590,"line_start":1207,"line_end":1207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156941,"byte_end":156949,"line_start":1219,"line_end":1219,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156795,"byte_end":156850,"line_start":1216,"line_end":1216,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156855,"byte_end":156858,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":156863,"byte_end":156933,"line_start":1218,"line_end":1218,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":161341,"byte_end":161348,"line_start":1324,"line_end":1324,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":161038,"byte_end":161111,"line_start":1319,"line_end":1319,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":161116,"byte_end":161119,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":161124,"byte_end":161193,"line_start":1321,"line_end":1321,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":161198,"byte_end":161267,"line_start":1322,"line_end":1322,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":161272,"byte_end":161333,"line_start":1323,"line_end":1323,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":161804,"byte_end":161815,"line_start":1337,"line_end":1337,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":161525,"byte_end":161600,"line_start":1332,"line_end":1332,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":161605,"byte_end":161626,"line_start":1333,"line_end":1333,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":161631,"byte_end":161634,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":161639,"byte_end":161719,"line_start":1335,"line_end":1335,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":161724,"byte_end":161796,"line_start":1336,"line_end":1336,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162268,"byte_end":162280,"line_start":1350,"line_end":1350,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":161989,"byte_end":162065,"line_start":1345,"line_end":1345,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162070,"byte_end":162091,"line_start":1346,"line_end":1346,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162096,"byte_end":162099,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162104,"byte_end":162183,"line_start":1348,"line_end":1348,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162188,"byte_end":162260,"line_start":1349,"line_end":1349,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162556,"byte_end":162571,"line_start":1360,"line_end":1360,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162455,"byte_end":162526,"line_start":1358,"line_end":1358,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162531,"byte_end":162548,"line_start":1359,"line_end":1359,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164672,"byte_end":164688,"line_start":1415,"line_end":1415,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":1415},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162718,"byte_end":162793,"line_start":1367,"line_end":1367,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162798,"byte_end":162808,"line_start":1368,"line_end":1368,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162813,"byte_end":162816,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162821,"byte_end":162894,"line_start":1370,"line_end":1370,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162899,"byte_end":162967,"line_start":1371,"line_end":1371,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":162972,"byte_end":163020,"line_start":1372,"line_end":1372,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163025,"byte_end":163100,"line_start":1373,"line_end":1373,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163105,"byte_end":163181,"line_start":1374,"line_end":1374,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163186,"byte_end":163212,"line_start":1375,"line_end":1375,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163217,"byte_end":163220,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163225,"byte_end":163298,"line_start":1377,"line_end":1377,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163303,"byte_end":163373,"line_start":1378,"line_end":1378,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163378,"byte_end":163418,"line_start":1379,"line_end":1379,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163423,"byte_end":163426,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163431,"byte_end":163485,"line_start":1381,"line_end":1381,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163490,"byte_end":163574,"line_start":1382,"line_end":1382,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163579,"byte_end":163582,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163587,"byte_end":163601,"line_start":1384,"line_end":1384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163606,"byte_end":163609,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163614,"byte_end":163621,"line_start":1386,"line_end":1386,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163626,"byte_end":163667,"line_start":1387,"line_end":1387,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163672,"byte_end":163706,"line_start":1388,"line_end":1388,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163711,"byte_end":163766,"line_start":1389,"line_end":1389,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163771,"byte_end":163774,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163779,"byte_end":163814,"line_start":1391,"line_end":1391,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163819,"byte_end":163869,"line_start":1392,"line_end":1392,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163874,"byte_end":163896,"line_start":1393,"line_end":1393,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163901,"byte_end":163911,"line_start":1394,"line_end":1394,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163916,"byte_end":163933,"line_start":1395,"line_end":1395,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163938,"byte_end":163964,"line_start":1396,"line_end":1396,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":163969,"byte_end":164024,"line_start":1397,"line_end":1397,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164029,"byte_end":164058,"line_start":1398,"line_end":1398,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164063,"byte_end":164126,"line_start":1399,"line_end":1399,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164131,"byte_end":164177,"line_start":1400,"line_end":1400,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164182,"byte_end":164196,"line_start":1401,"line_end":1401,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164201,"byte_end":164270,"line_start":1402,"line_end":1402,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164275,"byte_end":164300,"line_start":1403,"line_end":1403,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164305,"byte_end":164358,"line_start":1404,"line_end":1404,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164363,"byte_end":164392,"line_start":1405,"line_end":1405,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164397,"byte_end":164410,"line_start":1406,"line_end":1406,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164415,"byte_end":164485,"line_start":1407,"line_end":1407,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164490,"byte_end":164549,"line_start":1408,"line_end":1408,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164554,"byte_end":164584,"line_start":1409,"line_end":1409,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164589,"byte_end":164598,"line_start":1410,"line_end":1410,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164603,"byte_end":164608,"line_start":1411,"line_end":1411,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164613,"byte_end":164638,"line_start":1412,"line_end":1412,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164643,"byte_end":164652,"line_start":1413,"line_end":1413,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":164657,"byte_end":164664,"line_start":1414,"line_end":1414,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6901},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\and_then.rs","byte_start":261907,"byte_end":261914,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":6906},{"krate":0,"index":6907},{"krate":0,"index":6905}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\and_then.rs","byte_start":261847,"byte_end":261895,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\and_then.rs","byte_start":261832,"byte_end":261846,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6937},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\and_then.rs","byte_start":261907,"byte_end":261914,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"__AndThen","qualname":"::stream::try_stream::and_then::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":6942},{"krate":0,"index":6943},{"krate":0,"index":6944}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\and_then.rs","byte_start":261832,"byte_end":261846,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6974},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":226126,"byte_end":226133,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":6977}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6999},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::stream::try_stream::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":7003},{"krate":0,"index":7004}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7051},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":226381,"byte_end":226390,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":7054}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7076},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::stream::try_stream::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":7080},{"krate":0,"index":7081}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7128},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":226691,"byte_end":226701,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":7131}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7153},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::stream::try_stream::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":7157},{"krate":0,"index":7158}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7202},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\into_stream.rs","byte_start":264668,"byte_end":264678,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":7204}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\into_stream.rs","byte_start":264608,"byte_end":264656,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\into_stream.rs","byte_start":264576,"byte_end":264590,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7222},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\into_stream.rs","byte_start":264668,"byte_end":264678,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__IntoStream","qualname":"::stream::try_stream::into_stream::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":7225},{"krate":0,"index":7226}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\into_stream.rs","byte_start":264576,"byte_end":264590,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7251},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":227127,"byte_end":227132,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":7254}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7276},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::stream::try_stream::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":7280},{"krate":0,"index":7281}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7328},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":227409,"byte_end":227415,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":7331}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10943,"byte_end":11024,"line_start":293,"line_end":293,"column_start":9,"column_end":90}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7353},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::stream::try_stream::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":7357},{"krate":0,"index":7358}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7402},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\or_else.rs","byte_start":265993,"byte_end":265999,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":7407},{"krate":0,"index":7408},{"krate":0,"index":7406}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\or_else.rs","byte_start":265933,"byte_end":265981,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\or_else.rs","byte_start":265918,"byte_end":265932,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7438},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\or_else.rs","byte_start":265993,"byte_end":265999,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"__OrElse","qualname":"::stream::try_stream::or_else::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":7443},{"krate":0,"index":7444},{"krate":0,"index":7445}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\or_else.rs","byte_start":265918,"byte_end":265932,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7472},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_next.rs","byte_start":268869,"byte_end":268876,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":7475}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_next.rs","byte_start":268702,"byte_end":268772,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_next.rs","byte_start":268790,"byte_end":268857,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7480},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_for_each.rs","byte_start":269942,"byte_end":269952,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":7485},{"krate":0,"index":7484},{"krate":0,"index":7486}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_for_each.rs","byte_start":269863,"byte_end":269930,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_for_each.rs","byte_start":269848,"byte_end":269862,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7516},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_for_each.rs","byte_start":269942,"byte_end":269952,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"__TryForEach","qualname":"::stream::try_stream::try_for_each::_::__TryForEach","value":"__TryForEach {  }","parent":null,"children":[{"krate":0,"index":7521},{"krate":0,"index":7522},{"krate":0,"index":7523}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_for_each.rs","byte_start":269848,"byte_end":269862,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7546},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter.rs","byte_start":271823,"byte_end":271832,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":7552},{"krate":0,"index":7550},{"krate":0,"index":7553},{"krate":0,"index":7551}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter.rs","byte_start":271763,"byte_end":271811,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter.rs","byte_start":271748,"byte_end":271762,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7585},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter.rs","byte_start":271823,"byte_end":271832,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__TryFilter","qualname":"::stream::try_stream::try_filter::_::__TryFilter","value":"__TryFilter {  }","parent":null,"children":[{"krate":0,"index":7590},{"krate":0,"index":7591},{"krate":0,"index":7592}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter.rs","byte_start":271748,"byte_end":271762,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7619},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":274988,"byte_end":275000,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":7624},{"krate":0,"index":7623},{"krate":0,"index":7625}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":274928,"byte_end":274976,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":274913,"byte_end":274927,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7655},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":274988,"byte_end":275000,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryFilterMap","qualname":"::stream::try_stream::try_filter_map::_::__TryFilterMap","value":"__TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":7660},{"krate":0,"index":7661},{"krate":0,"index":7662}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":274913,"byte_end":274927,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7689},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_flatten.rs","byte_start":277980,"byte_end":277990,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7691},{"krate":0,"index":7692}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_flatten.rs","byte_start":277920,"byte_end":277968,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_flatten.rs","byte_start":277888,"byte_end":277902,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7712},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_flatten.rs","byte_start":277980,"byte_end":277990,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryFlatten","qualname":"::stream::try_stream::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7715},{"krate":0,"index":7716},{"krate":0,"index":7717}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_flatten.rs","byte_start":277888,"byte_end":277902,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7739},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_collect.rs","byte_start":280088,"byte_end":280098,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":7743},{"krate":0,"index":7742}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_collect.rs","byte_start":280009,"byte_end":280076,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_collect.rs","byte_start":279977,"byte_end":279991,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7767},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_collect.rs","byte_start":280088,"byte_end":280098,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryCollect","qualname":"::stream::try_stream::try_collect::_::__TryCollect","value":"__TryCollect {  }","parent":null,"children":[{"krate":0,"index":7771},{"krate":0,"index":7772}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_collect.rs","byte_start":279977,"byte_end":279991,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7795},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_concat.rs","byte_start":281439,"byte_end":281448,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":7798},{"krate":0,"index":7797}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_concat.rs","byte_start":281360,"byte_end":281427,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_concat.rs","byte_start":281328,"byte_end":281342,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7818},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_concat.rs","byte_start":281439,"byte_end":281448,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"__TryConcat","qualname":"::stream::try_stream::try_concat::_::__TryConcat","value":"__TryConcat {  }","parent":null,"children":[{"krate":0,"index":7821},{"krate":0,"index":7822}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_concat.rs","byte_start":281328,"byte_end":281342,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7840},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_fold.rs","byte_start":282835,"byte_end":282842,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":7847},{"krate":0,"index":7845},{"krate":0,"index":7846},{"krate":0,"index":7848}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_fold.rs","byte_start":282756,"byte_end":282823,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_fold.rs","byte_start":282741,"byte_end":282755,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7884},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_fold.rs","byte_start":282835,"byte_end":282842,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__TryFold","qualname":"::stream::try_stream::try_fold::_::__TryFold","value":"__TryFold {  }","parent":null,"children":[{"krate":0,"index":7890},{"krate":0,"index":7891},{"krate":0,"index":7892}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_fold.rs","byte_start":282741,"byte_end":282755,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287285,"byte_end":287295,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":285428,"byte_end":285504,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":285505,"byte_end":285508,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":285509,"byte_end":285585,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":285586,"byte_end":285656,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":285657,"byte_end":285716,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":285717,"byte_end":285720,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":285721,"byte_end":285799,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":285800,"byte_end":285877,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":285878,"byte_end":285942,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":285943,"byte_end":285946,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":285947,"byte_end":286019,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286020,"byte_end":286098,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286099,"byte_end":286128,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286129,"byte_end":286132,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286133,"byte_end":286210,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286211,"byte_end":286275,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286276,"byte_end":286328,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286329,"byte_end":286332,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286333,"byte_end":286410,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286411,"byte_end":286483,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286484,"byte_end":286553,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286554,"byte_end":286632,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286633,"byte_end":286636,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286637,"byte_end":286650,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286651,"byte_end":286654,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286655,"byte_end":286662,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286663,"byte_end":286696,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286697,"byte_end":286720,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286721,"byte_end":286762,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286763,"byte_end":286809,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286810,"byte_end":286813,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286814,"byte_end":286873,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286874,"byte_end":286896,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286897,"byte_end":286931,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286932,"byte_end":286941,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286942,"byte_end":286945,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286946,"byte_end":286969,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":286970,"byte_end":287009,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287010,"byte_end":287046,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287047,"byte_end":287090,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287091,"byte_end":287107,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287108,"byte_end":287128,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287129,"byte_end":287138,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287139,"byte_end":287146,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287147,"byte_end":287150,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287151,"byte_end":287216,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287217,"byte_end":287259,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287260,"byte_end":287269,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287270,"byte_end":287277,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7919},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287629,"byte_end":287638,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":7923},{"krate":0,"index":7924},{"krate":0,"index":7925}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287569,"byte_end":287617,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287554,"byte_end":287568,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7955},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287629,"byte_end":287638,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"__TryUnfold","qualname":"::stream::try_stream::try_unfold::_::__TryUnfold","value":"__TryUnfold {  }","parent":null,"children":[{"krate":0,"index":7960},{"krate":0,"index":7961}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287554,"byte_end":287568,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7984},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":289540,"byte_end":289552,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":7991},{"krate":0,"index":7988},{"krate":0,"index":7992},{"krate":0,"index":7989},{"krate":0,"index":7990}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":289480,"byte_end":289528,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":289465,"byte_end":289479,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8026},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":289540,"byte_end":289552,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::_::__TrySkipWhile","value":"__TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":8031},{"krate":0,"index":8032},{"krate":0,"index":8033}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":289465,"byte_end":289479,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8060},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_take_while.rs","byte_start":293144,"byte_end":293156,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":8067},{"krate":0,"index":8064},{"krate":0,"index":8068},{"krate":0,"index":8065},{"krate":0,"index":8066}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_take_while.rs","byte_start":293084,"byte_end":293132,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_take_while.rs","byte_start":293069,"byte_end":293083,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8102},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_take_while.rs","byte_start":293144,"byte_end":293156,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryTakeWhile","qualname":"::stream::try_stream::try_take_while::_::__TryTakeWhile","value":"__TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":8107},{"krate":0,"index":8108},{"krate":0,"index":8109}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_take_while.rs","byte_start":293069,"byte_end":293083,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230369,"byte_end":230381,"line_start":144,"line_end":144,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1971},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1978},{"krate":0,"index":1981},{"krate":0,"index":1984},{"krate":0,"index":1986},{"krate":0,"index":1989},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1998},{"krate":0,"index":1999}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230307,"byte_end":230358,"line_start":143,"line_end":143,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230923,"byte_end":230931,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230399,"byte_end":230473,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230478,"byte_end":230504,"line_start":146,"line_end":146,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230509,"byte_end":230512,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230517,"byte_end":230531,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230536,"byte_end":230539,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230544,"byte_end":230551,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230556,"byte_end":230597,"line_start":151,"line_end":151,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230602,"byte_end":230648,"line_start":152,"line_end":152,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230653,"byte_end":230656,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230661,"byte_end":230681,"line_start":154,"line_end":154,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230686,"byte_end":230731,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230736,"byte_end":230767,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230772,"byte_end":230775,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230780,"byte_end":230834,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230839,"byte_end":230890,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230895,"byte_end":230903,"line_start":160,"line_end":160,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230908,"byte_end":230915,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231627,"byte_end":231633,"line_start":187,"line_end":187,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231107,"byte_end":231180,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231185,"byte_end":231216,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231221,"byte_end":231224,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231229,"byte_end":231243,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231248,"byte_end":231251,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231256,"byte_end":231263,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231268,"byte_end":231309,"line_start":176,"line_end":176,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231314,"byte_end":231360,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231365,"byte_end":231368,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231373,"byte_end":231393,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231398,"byte_end":231439,"line_start":180,"line_end":180,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231444,"byte_end":231475,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231480,"byte_end":231483,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231488,"byte_end":231541,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231546,"byte_end":231594,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231599,"byte_end":231607,"line_start":185,"line_end":185,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231612,"byte_end":231619,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232342,"byte_end":232349,"line_start":212,"line_end":212,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231823,"byte_end":231894,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231899,"byte_end":231930,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231935,"byte_end":231938,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231943,"byte_end":231957,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231962,"byte_end":231965,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231970,"byte_end":231977,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":231982,"byte_end":232023,"line_start":201,"line_end":201,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232028,"byte_end":232074,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232079,"byte_end":232082,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232087,"byte_end":232107,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232112,"byte_end":232153,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232158,"byte_end":232190,"line_start":206,"line_end":206,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232195,"byte_end":232198,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232203,"byte_end":232256,"line_start":208,"line_end":208,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232261,"byte_end":232309,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232314,"byte_end":232322,"line_start":210,"line_end":210,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232327,"byte_end":232334,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233954,"byte_end":233962,"line_start":258,"line_end":258,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232541,"byte_end":232617,"line_start":220,"line_end":220,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232622,"byte_end":232662,"line_start":221,"line_end":221,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232667,"byte_end":232670,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232675,"byte_end":232751,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232756,"byte_end":232832,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232837,"byte_end":232910,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232915,"byte_end":232957,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232962,"byte_end":232965,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":232970,"byte_end":233043,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233048,"byte_end":233079,"line_start":229,"line_end":229,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233084,"byte_end":233087,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233092,"byte_end":233166,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233171,"byte_end":233245,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233250,"byte_end":233266,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233271,"byte_end":233274,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233279,"byte_end":233350,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233355,"byte_end":233381,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233386,"byte_end":233389,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233394,"byte_end":233466,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233471,"byte_end":233520,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233525,"byte_end":233528,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233533,"byte_end":233547,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233552,"byte_end":233555,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233560,"byte_end":233567,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233572,"byte_end":233603,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233608,"byte_end":233632,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233637,"byte_end":233675,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233680,"byte_end":233683,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233688,"byte_end":233744,"line_start":248,"line_end":248,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233749,"byte_end":233752,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233757,"byte_end":233792,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233797,"byte_end":233836,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233841,"byte_end":233865,"line_start":252,"line_end":252,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233870,"byte_end":233886,"line_start":253,"line_end":253,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233891,"byte_end":233907,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233912,"byte_end":233922,"line_start":255,"line_end":255,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233927,"byte_end":233934,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":233939,"byte_end":233946,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":235114,"byte_end":235121,"line_start":284,"line_end":284,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234215,"byte_end":234280,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234285,"byte_end":234334,"line_start":268,"line_end":268,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234339,"byte_end":234342,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234347,"byte_end":234426,"line_start":270,"line_end":270,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234431,"byte_end":234505,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234510,"byte_end":234586,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234591,"byte_end":234636,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234641,"byte_end":234644,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234649,"byte_end":234724,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234729,"byte_end":234769,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234774,"byte_end":234777,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234782,"byte_end":234891,"line_start":278,"line_end":278,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234896,"byte_end":234970,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234975,"byte_end":234991,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":234996,"byte_end":234999,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":235004,"byte_end":235075,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":235080,"byte_end":235106,"line_start":283,"line_end":283,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":235673,"byte_end":235683,"line_start":299,"line_end":299,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":235370,"byte_end":235444,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":235449,"byte_end":235459,"line_start":294,"line_end":294,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":235464,"byte_end":235467,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":235472,"byte_end":235542,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":235547,"byte_end":235623,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":235628,"byte_end":235665,"line_start":298,"line_end":298,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236172,"byte_end":236183,"line_start":312,"line_end":312,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":235881,"byte_end":235960,"line_start":307,"line_end":307,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":235965,"byte_end":235968,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":235973,"byte_end":236043,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236048,"byte_end":236122,"line_start":310,"line_end":310,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236127,"byte_end":236164,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237104,"byte_end":237115,"line_start":341,"line_end":341,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236386,"byte_end":236439,"line_start":320,"line_end":320,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236444,"byte_end":236488,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236493,"byte_end":236496,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236501,"byte_end":236550,"line_start":323,"line_end":323,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236555,"byte_end":236628,"line_start":324,"line_end":324,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236633,"byte_end":236653,"line_start":325,"line_end":325,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236658,"byte_end":236661,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236666,"byte_end":236680,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236685,"byte_end":236688,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236693,"byte_end":236700,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236705,"byte_end":236764,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236769,"byte_end":236772,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236777,"byte_end":236796,"line_start":332,"line_end":332,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236801,"byte_end":236819,"line_start":333,"line_end":333,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236824,"byte_end":236896,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236901,"byte_end":236931,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236936,"byte_end":236943,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":236948,"byte_end":237022,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237027,"byte_end":237030,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237035,"byte_end":237084,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237089,"byte_end":237096,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238010,"byte_end":238018,"line_start":368,"line_end":368,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237271,"byte_end":237345,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237350,"byte_end":237424,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237429,"byte_end":237441,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237446,"byte_end":237449,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237454,"byte_end":237521,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237526,"byte_end":237598,"line_start":353,"line_end":353,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237603,"byte_end":237642,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237647,"byte_end":237650,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237655,"byte_end":237669,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237674,"byte_end":237677,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237682,"byte_end":237689,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237694,"byte_end":237735,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237740,"byte_end":237786,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237791,"byte_end":237794,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237799,"byte_end":237856,"line_start":362,"line_end":362,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237861,"byte_end":237864,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237869,"byte_end":237923,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237928,"byte_end":237977,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237982,"byte_end":237990,"line_start":366,"line_end":366,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":237995,"byte_end":238002,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239370,"byte_end":239382,"line_start":408,"line_end":408,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238185,"byte_end":238254,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238259,"byte_end":238315,"line_start":376,"line_end":376,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238320,"byte_end":238323,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238328,"byte_end":238403,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238408,"byte_end":238478,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238483,"byte_end":238521,"line_start":380,"line_end":380,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238526,"byte_end":238529,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238534,"byte_end":238612,"line_start":382,"line_end":382,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238617,"byte_end":238677,"line_start":383,"line_end":383,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238682,"byte_end":238739,"line_start":384,"line_end":384,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238744,"byte_end":238811,"line_start":385,"line_end":385,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238816,"byte_end":238846,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238851,"byte_end":238854,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238859,"byte_end":238873,"line_start":388,"line_end":388,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238878,"byte_end":238881,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238886,"byte_end":238893,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238898,"byte_end":238939,"line_start":391,"line_end":391,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238944,"byte_end":238968,"line_start":392,"line_end":392,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":238973,"byte_end":239019,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239024,"byte_end":239027,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239032,"byte_end":239053,"line_start":395,"line_end":395,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239058,"byte_end":239061,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239066,"byte_end":239071,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239076,"byte_end":239137,"line_start":398,"line_end":398,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239142,"byte_end":239164,"line_start":399,"line_end":399,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239169,"byte_end":239233,"line_start":400,"line_end":400,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239238,"byte_end":239249,"line_start":401,"line_end":401,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239254,"byte_end":239293,"line_start":402,"line_end":402,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239298,"byte_end":239303,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239308,"byte_end":239311,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239316,"byte_end":239337,"line_start":405,"line_end":405,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239342,"byte_end":239350,"line_start":406,"line_end":406,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239355,"byte_end":239362,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240395,"byte_end":240409,"line_start":438,"line_end":438,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239646,"byte_end":239720,"line_start":417,"line_end":417,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239725,"byte_end":239748,"line_start":418,"line_end":418,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239753,"byte_end":239756,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239761,"byte_end":239792,"line_start":420,"line_end":420,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239797,"byte_end":239874,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239879,"byte_end":239908,"line_start":422,"line_end":422,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239913,"byte_end":239916,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239921,"byte_end":239935,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239940,"byte_end":239943,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239948,"byte_end":239955,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":239960,"byte_end":240001,"line_start":427,"line_end":427,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240006,"byte_end":240030,"line_start":428,"line_end":428,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240035,"byte_end":240081,"line_start":429,"line_end":429,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240086,"byte_end":240089,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240094,"byte_end":240163,"line_start":431,"line_end":431,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240168,"byte_end":240238,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240243,"byte_end":240246,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240251,"byte_end":240318,"line_start":434,"line_end":434,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240323,"byte_end":240362,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240367,"byte_end":240375,"line_start":436,"line_end":436,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240380,"byte_end":240387,"line_start":437,"line_end":437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":241442,"byte_end":241456,"line_start":468,"line_end":468,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240686,"byte_end":240760,"line_start":447,"line_end":447,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240765,"byte_end":240788,"line_start":448,"line_end":448,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240793,"byte_end":240796,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240801,"byte_end":240832,"line_start":450,"line_end":450,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240837,"byte_end":240914,"line_start":451,"line_end":451,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240919,"byte_end":240948,"line_start":452,"line_end":452,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240953,"byte_end":240956,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240961,"byte_end":240975,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240980,"byte_end":240983,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":240988,"byte_end":240995,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":241000,"byte_end":241041,"line_start":457,"line_end":457,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":241046,"byte_end":241070,"line_start":458,"line_end":458,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":241075,"byte_end":241121,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":241126,"byte_end":241129,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":241134,"byte_end":241210,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":241215,"byte_end":241285,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":241290,"byte_end":241293,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":241298,"byte_end":241365,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":241370,"byte_end":241409,"line_start":465,"line_end":465,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":241414,"byte_end":241422,"line_start":466,"line_end":466,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":241427,"byte_end":241434,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1984},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244836,"byte_end":244847,"line_start":567,"line_end":567,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":243797,"byte_end":243849,"line_start":537,"line_end":537,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":243854,"byte_end":243921,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":243926,"byte_end":243929,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":243934,"byte_end":244008,"line_start":540,"line_end":540,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244013,"byte_end":244094,"line_start":541,"line_end":541,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244099,"byte_end":244169,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244174,"byte_end":244177,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244182,"byte_end":244250,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244255,"byte_end":244258,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244263,"byte_end":244277,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244282,"byte_end":244285,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244290,"byte_end":244297,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244302,"byte_end":244343,"line_start":549,"line_end":549,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244348,"byte_end":244379,"line_start":550,"line_end":550,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244384,"byte_end":244422,"line_start":551,"line_end":551,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244427,"byte_end":244447,"line_start":552,"line_end":552,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244452,"byte_end":244455,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244460,"byte_end":244497,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244502,"byte_end":244505,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244510,"byte_end":244537,"line_start":556,"line_end":556,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244542,"byte_end":244566,"line_start":557,"line_end":557,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244571,"byte_end":244617,"line_start":558,"line_end":558,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244622,"byte_end":244631,"line_start":559,"line_end":559,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244636,"byte_end":244679,"line_start":560,"line_end":560,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244684,"byte_end":244691,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244696,"byte_end":244699,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244704,"byte_end":244767,"line_start":563,"line_end":563,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244772,"byte_end":244803,"line_start":564,"line_end":564,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244808,"byte_end":244816,"line_start":565,"line_end":565,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":244821,"byte_end":244828,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246318,"byte_end":246328,"line_start":604,"line_end":604,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245030,"byte_end":245103,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245108,"byte_end":245142,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245147,"byte_end":245150,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245155,"byte_end":245230,"line_start":577,"line_end":577,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245235,"byte_end":245310,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245315,"byte_end":245388,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245393,"byte_end":245464,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245469,"byte_end":245519,"line_start":581,"line_end":581,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245524,"byte_end":245527,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245532,"byte_end":245603,"line_start":583,"line_end":583,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245608,"byte_end":245611,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245616,"byte_end":245692,"line_start":585,"line_end":585,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245697,"byte_end":245767,"line_start":586,"line_end":586,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245772,"byte_end":245797,"line_start":587,"line_end":587,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245802,"byte_end":245805,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245810,"byte_end":245824,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245829,"byte_end":245836,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245841,"byte_end":245882,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245887,"byte_end":245911,"line_start":592,"line_end":592,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245916,"byte_end":245973,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245978,"byte_end":245981,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":245986,"byte_end":246066,"line_start":595,"line_end":595,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246071,"byte_end":246114,"line_start":596,"line_end":596,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246119,"byte_end":246152,"line_start":597,"line_end":597,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246157,"byte_end":246164,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246169,"byte_end":246172,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246177,"byte_end":246225,"line_start":600,"line_end":600,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246230,"byte_end":246285,"line_start":601,"line_end":601,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246290,"byte_end":246298,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246303,"byte_end":246310,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247955,"byte_end":247969,"line_start":645,"line_end":645,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246579,"byte_end":246641,"line_start":613,"line_end":613,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246646,"byte_end":246714,"line_start":614,"line_end":614,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246719,"byte_end":246753,"line_start":615,"line_end":615,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246758,"byte_end":246761,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246766,"byte_end":246841,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246846,"byte_end":246921,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":246926,"byte_end":247002,"line_start":619,"line_end":619,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247007,"byte_end":247072,"line_start":620,"line_end":620,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247077,"byte_end":247080,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247085,"byte_end":247156,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247161,"byte_end":247164,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247169,"byte_end":247245,"line_start":624,"line_end":624,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247250,"byte_end":247324,"line_start":625,"line_end":625,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247329,"byte_end":247354,"line_start":626,"line_end":626,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247359,"byte_end":247362,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247367,"byte_end":247381,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247386,"byte_end":247393,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247398,"byte_end":247439,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247444,"byte_end":247501,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247506,"byte_end":247531,"line_start":632,"line_end":632,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247536,"byte_end":247539,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247544,"byte_end":247614,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247619,"byte_end":247674,"line_start":635,"line_end":635,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247679,"byte_end":247741,"line_start":636,"line_end":636,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247746,"byte_end":247761,"line_start":637,"line_end":637,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247766,"byte_end":247773,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247778,"byte_end":247781,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247786,"byte_end":247807,"line_start":640,"line_end":640,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247812,"byte_end":247861,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247866,"byte_end":247922,"line_start":642,"line_end":642,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247927,"byte_end":247935,"line_start":643,"line_end":643,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":247940,"byte_end":247947,"line_start":644,"line_end":644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249661,"byte_end":249672,"line_start":692,"line_end":692,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248246,"byte_end":248311,"line_start":654,"line_end":654,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248316,"byte_end":248319,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248324,"byte_end":248397,"line_start":656,"line_end":656,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248402,"byte_end":248475,"line_start":657,"line_end":657,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248480,"byte_end":248553,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248558,"byte_end":248628,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248633,"byte_end":248636,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248641,"byte_end":248655,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248660,"byte_end":248663,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248668,"byte_end":248675,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248680,"byte_end":248721,"line_start":664,"line_end":664,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248726,"byte_end":248757,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248762,"byte_end":248813,"line_start":666,"line_end":666,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248818,"byte_end":248838,"line_start":667,"line_end":667,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248843,"byte_end":248846,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248851,"byte_end":248890,"line_start":669,"line_end":669,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248895,"byte_end":248934,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248939,"byte_end":248978,"line_start":671,"line_end":671,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248983,"byte_end":248986,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":248991,"byte_end":249018,"line_start":673,"line_end":673,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249023,"byte_end":249066,"line_start":674,"line_end":674,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249071,"byte_end":249078,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249083,"byte_end":249110,"line_start":676,"line_end":676,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249115,"byte_end":249158,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249163,"byte_end":249207,"line_start":678,"line_end":678,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249212,"byte_end":249219,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249224,"byte_end":249251,"line_start":680,"line_end":680,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249256,"byte_end":249301,"line_start":681,"line_end":681,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249306,"byte_end":249351,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249356,"byte_end":249400,"line_start":683,"line_end":683,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249405,"byte_end":249412,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249417,"byte_end":249420,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249425,"byte_end":249464,"line_start":686,"line_end":686,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249469,"byte_end":249518,"line_start":687,"line_end":687,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249523,"byte_end":249572,"line_start":688,"line_end":688,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249577,"byte_end":249627,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249632,"byte_end":249641,"line_start":690,"line_end":690,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249646,"byte_end":249653,"line_start":691,"line_end":691,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251264,"byte_end":251272,"line_start":731,"line_end":731,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":249977,"byte_end":250047,"line_start":703,"line_end":703,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250052,"byte_end":250112,"line_start":704,"line_end":704,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250117,"byte_end":250120,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250125,"byte_end":250195,"line_start":706,"line_end":706,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250200,"byte_end":250276,"line_start":707,"line_end":707,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250281,"byte_end":250357,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250362,"byte_end":250432,"line_start":709,"line_end":709,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250437,"byte_end":250463,"line_start":710,"line_end":710,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250468,"byte_end":250471,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250476,"byte_end":250556,"line_start":712,"line_end":712,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250561,"byte_end":250630,"line_start":713,"line_end":713,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250635,"byte_end":250656,"line_start":714,"line_end":714,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250661,"byte_end":250664,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250669,"byte_end":250683,"line_start":716,"line_end":716,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250688,"byte_end":250691,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250696,"byte_end":250703,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250708,"byte_end":250749,"line_start":719,"line_end":719,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250754,"byte_end":250800,"line_start":720,"line_end":720,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250805,"byte_end":250808,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250813,"byte_end":250882,"line_start":722,"line_end":722,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250887,"byte_end":250964,"line_start":723,"line_end":723,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":250969,"byte_end":251002,"line_start":724,"line_end":724,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251007,"byte_end":251010,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251015,"byte_end":251101,"line_start":726,"line_end":726,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251106,"byte_end":251192,"line_start":727,"line_end":727,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251197,"byte_end":251231,"line_start":728,"line_end":728,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251236,"byte_end":251244,"line_start":729,"line_end":729,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251249,"byte_end":251256,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252798,"byte_end":252808,"line_start":774,"line_end":774,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251552,"byte_end":251614,"line_start":740,"line_end":740,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251619,"byte_end":251694,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251699,"byte_end":251702,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251707,"byte_end":251778,"line_start":743,"line_end":743,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251783,"byte_end":251859,"line_start":744,"line_end":744,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251864,"byte_end":251903,"line_start":745,"line_end":745,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251908,"byte_end":251911,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":251916,"byte_end":252002,"line_start":747,"line_end":747,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252007,"byte_end":252010,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252015,"byte_end":252099,"line_start":749,"line_end":749,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252104,"byte_end":252160,"line_start":750,"line_end":750,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252165,"byte_end":252168,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252173,"byte_end":252187,"line_start":752,"line_end":752,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252192,"byte_end":252195,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252200,"byte_end":252207,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252212,"byte_end":252253,"line_start":755,"line_end":755,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252258,"byte_end":252289,"line_start":756,"line_end":756,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252294,"byte_end":252332,"line_start":757,"line_end":757,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252337,"byte_end":252357,"line_start":758,"line_end":758,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252362,"byte_end":252365,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252370,"byte_end":252431,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252436,"byte_end":252439,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252444,"byte_end":252471,"line_start":762,"line_end":762,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252476,"byte_end":252507,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252512,"byte_end":252538,"line_start":764,"line_end":764,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252543,"byte_end":252613,"line_start":765,"line_end":765,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252618,"byte_end":252627,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252632,"byte_end":252639,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252644,"byte_end":252647,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252652,"byte_end":252691,"line_start":769,"line_end":769,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252696,"byte_end":252699,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252704,"byte_end":252764,"line_start":771,"line_end":771,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252769,"byte_end":252778,"line_start":772,"line_end":772,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":252783,"byte_end":252790,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":258993,"byte_end":259012,"line_start":929,"line_end":929,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":258885,"byte_end":258963,"line_start":927,"line_end":927,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":258968,"byte_end":258985,"line_start":928,"line_end":928,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":8136},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296617,"byte_end":296621,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8138}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296495,"byte_end":296532,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296557,"byte_end":296605,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2030},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":297139,"byte_end":297143,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296673,"byte_end":296737,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296738,"byte_end":296766,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296767,"byte_end":296770,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296771,"byte_end":296844,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296845,"byte_end":296900,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296901,"byte_end":296904,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296905,"byte_end":296912,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296913,"byte_end":296954,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296955,"byte_end":296998,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296999,"byte_end":297002,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":297003,"byte_end":297047,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":297048,"byte_end":297113,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":297114,"byte_end":297123,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":297124,"byte_end":297131,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8145},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":297792,"byte_end":297798,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":8147}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":297668,"byte_end":297707,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":297732,"byte_end":297780,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298322,"byte_end":298328,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":297820,"byte_end":297880,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":297881,"byte_end":297884,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":297885,"byte_end":297952,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":297953,"byte_end":298025,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298026,"byte_end":298083,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298084,"byte_end":298087,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298088,"byte_end":298095,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298096,"byte_end":298137,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298138,"byte_end":298181,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298182,"byte_end":298185,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298186,"byte_end":298221,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298222,"byte_end":298296,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298297,"byte_end":298306,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298307,"byte_end":298314,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8154},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299113,"byte_end":299118,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":8156}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":298997,"byte_end":299035,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299053,"byte_end":299101,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299286,"byte_end":299291,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299156,"byte_end":299204,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299205,"byte_end":299208,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299209,"byte_end":299278,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300309,"byte_end":300313,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300002,"byte_end":300043,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300044,"byte_end":300047,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300048,"byte_end":300055,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300056,"byte_end":300097,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300098,"byte_end":300141,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300142,"byte_end":300145,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300146,"byte_end":300190,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300191,"byte_end":300246,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300247,"byte_end":300283,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300284,"byte_end":300293,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300294,"byte_end":300301,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8160},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300526,"byte_end":300530,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":8162}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300466,"byte_end":300514,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300434,"byte_end":300448,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8180},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300526,"byte_end":300530,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"__Once","qualname":"::stream::once::_::__Once","value":"__Once {  }","parent":null,"children":[{"krate":0,"index":8183},{"krate":0,"index":8184}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300434,"byte_end":300448,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8202},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":301666,"byte_end":301673,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":8204}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":301546,"byte_end":301588,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":301606,"byte_end":301654,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2125},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":301849,"byte_end":301856,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":301717,"byte_end":301771,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":301772,"byte_end":301775,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":301776,"byte_end":301841,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":302650,"byte_end":302656,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2152}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":302549,"byte_end":302589,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":302590,"byte_end":302638,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303344,"byte_end":303351,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":302856,"byte_end":302929,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":302930,"byte_end":302933,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":302934,"byte_end":302993,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":302994,"byte_end":302997,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":302998,"byte_end":303012,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303013,"byte_end":303016,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303017,"byte_end":303024,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303025,"byte_end":303058,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303059,"byte_end":303087,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303088,"byte_end":303091,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303092,"byte_end":303121,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303122,"byte_end":303125,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303126,"byte_end":303190,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303191,"byte_end":303244,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303245,"byte_end":303266,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303267,"byte_end":303320,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303321,"byte_end":303328,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303329,"byte_end":303336,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8208},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304001,"byte_end":304007,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":8212},{"krate":0,"index":8213},{"krate":0,"index":8211}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":303941,"byte_end":303989,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":303909,"byte_end":303923,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8239},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304001,"byte_end":304007,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Select","qualname":"::stream::select::_::__Select","value":"__Select {  }","parent":null,"children":[{"krate":0,"index":8243},{"krate":0,"index":8244},{"krate":0,"index":8245}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":303909,"byte_end":303923,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":2181},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304585,"byte_end":304591,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304109,"byte_end":304177,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304178,"byte_end":304254,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304255,"byte_end":304303,"line_start":21,"line_end":21,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304304,"byte_end":304307,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304308,"byte_end":304382,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304383,"byte_end":304452,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304453,"byte_end":304480,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304481,"byte_end":304484,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304485,"byte_end":304556,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304557,"byte_end":304577,"line_start":28,"line_end":28,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304970,"byte_end":304977,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304862,"byte_end":304936,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304941,"byte_end":304958,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305333,"byte_end":305340,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305071,"byte_end":305139,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305144,"byte_end":305175,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305180,"byte_end":305183,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305188,"byte_end":305261,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305266,"byte_end":305321,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305715,"byte_end":305726,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305446,"byte_end":305521,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305526,"byte_end":305557,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305562,"byte_end":305565,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305570,"byte_end":305643,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305648,"byte_end":305703,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":306132,"byte_end":306142,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305896,"byte_end":305959,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305964,"byte_end":305967,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":305972,"byte_end":306044,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":306049,"byte_end":306120,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309315,"byte_end":309321,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":307873,"byte_end":307943,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":307944,"byte_end":307947,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":307948,"byte_end":308017,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308018,"byte_end":308099,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308100,"byte_end":308131,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308132,"byte_end":308135,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308136,"byte_end":308215,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308216,"byte_end":308295,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308296,"byte_end":308350,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308351,"byte_end":308354,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308355,"byte_end":308435,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308436,"byte_end":308506,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308507,"byte_end":308529,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308530,"byte_end":308533,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308534,"byte_end":308611,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308612,"byte_end":308684,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308685,"byte_end":308762,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308763,"byte_end":308823,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308824,"byte_end":308827,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308828,"byte_end":308841,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308842,"byte_end":308845,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308846,"byte_end":308853,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308854,"byte_end":308895,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308896,"byte_end":308939,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308940,"byte_end":308943,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":308944,"byte_end":308999,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309000,"byte_end":309023,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309024,"byte_end":309063,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309064,"byte_end":309101,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309102,"byte_end":309141,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309142,"byte_end":309158,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309159,"byte_end":309175,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309176,"byte_end":309185,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309186,"byte_end":309193,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309194,"byte_end":309197,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309198,"byte_end":309250,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309251,"byte_end":309289,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309290,"byte_end":309299,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309300,"byte_end":309307,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8268},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309652,"byte_end":309658,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":8272},{"krate":0,"index":8273},{"krate":0,"index":8274}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309592,"byte_end":309640,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309577,"byte_end":309591,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8304},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309652,"byte_end":309658,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"__Unfold","qualname":"::stream::unfold::_::__Unfold","value":"__Unfold {  }","parent":null,"children":[{"krate":0,"index":8309},{"krate":0,"index":8310}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309577,"byte_end":309591,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":2249},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":8333},{"krate":0,"index":2250},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"/ Task notification","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\mod.rs","byte_start":311078,"byte_end":311099,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2258},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\spawn.rs","byte_start":312289,"byte_end":312297,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\spawn.rs","byte_start":312246,"byte_end":312278,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":2259},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\spawn.rs","byte_start":315053,"byte_end":315066,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\spawn.rs","byte_start":315005,"byte_end":315042,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":2277},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","parent":null,"children":[{"krate":0,"index":2278}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"/ Definition of the `Never` type,","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":317525,"byte_end":317560,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/ a stand-in for the `!` type until it becomes stable.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":317561,"byte_end":317617,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":318254,"byte_end":318259,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":317619,"byte_end":317654,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":317655,"byte_end":317658,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":317659,"byte_end":317734,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":317735,"byte_end":317772,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":317773,"byte_end":317776,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":317777,"byte_end":317841,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":317842,"byte_end":317845,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":317846,"byte_end":317917,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":317918,"byte_end":317969,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":317970,"byte_end":318062,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":318063,"byte_end":318066,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":318067,"byte_end":318138,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\never.rs","byte_start":318139,"byte_end":318244,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]},{"kind":"Trait","id":{"krate":0,"index":2284},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":318362,"byte_end":318369,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2286},{"krate":0,"index":2287}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2286},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":318384,"byte_end":318390,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":2284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":318399,"byte_end":318408,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":2284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":318600,"byte_end":318606,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2296}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":318631,"byte_end":318639,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":2294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2311},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":319943,"byte_end":319947,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8352},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":320303,"byte_end":320310,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8373},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":321044,"byte_end":321057,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8389},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":321399,"byte_end":321408,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8404},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":322357,"byte_end":322364,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8419},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":323075,"byte_end":323083,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8434},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":323803,"byte_end":323814,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8446},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":324632,"byte_end":324644,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8458},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":325725,"byte_end":325739,"line_start":312,"line_end":312,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":326498,"byte_end":326504,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":35903,"byte_end":35910,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":36034,"byte_end":36041,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":36272,"byte_end":36279,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":37052,"byte_end":37059,"line_start":59,"line_end":59,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":37290,"byte_end":37297,"line_start":71,"line_end":71,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40255,"byte_end":40259,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40356,"byte_end":40360,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":42079,"byte_end":42083,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":42192,"byte_end":42196,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\map.rs","byte_start":43075,"byte_end":43078,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\map.rs","byte_start":43247,"byte_end":43250,"line_start":28,"line_end":28,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\map.rs","byte_start":43516,"byte_end":43519,"line_start":40,"line_end":40,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19203,"byte_end":19204,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\into_future.rs","byte_start":66117,"byte_end":66127,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\into_future.rs","byte_start":66275,"byte_end":66285,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\into_future.rs","byte_start":66391,"byte_end":66401,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":67054,"byte_end":67064,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":67188,"byte_end":67198,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":67445,"byte_end":67455,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":68468,"byte_end":68478,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":68725,"byte_end":68735,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72129,"byte_end":72142,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72266,"byte_end":72279,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72526,"byte_end":72539,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":48839,"byte_end":48842,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":73881,"byte_end":73885,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74458,"byte_end":74462,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74594,"byte_end":74598,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75175,"byte_end":75182,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75733,"byte_end":75740,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75885,"byte_end":75892,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75919,"byte_end":75926,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77247,"byte_end":77256,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":78251,"byte_end":78260,"line_start":72,"line_end":72,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":78461,"byte_end":78470,"line_start":81,"line_end":81,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79886,"byte_end":79898,"line_start":29,"line_end":29,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":80908,"byte_end":80920,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":81124,"byte_end":81136,"line_start":66,"line_end":66,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\option.rs","byte_start":82644,"byte_end":82656,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\option.rs","byte_start":82989,"byte_end":83001,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\option.rs","byte_start":83184,"byte_end":83196,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83598,"byte_end":83604,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":84274,"byte_end":84280,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":84422,"byte_end":84428,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":84905,"byte_end":84910,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85089,"byte_end":85094,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85126,"byte_end":85131,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85228,"byte_end":85233,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":91952,"byte_end":91958,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":94200,"byte_end":94206,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":94909,"byte_end":94915,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102462,"byte_end":102471,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":104177,"byte_end":104186,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105677,"byte_end":105683,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":106068,"byte_end":106074,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":106455,"byte_end":106461,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":106702,"byte_end":106708,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":107055,"byte_end":107061,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":107337,"byte_end":107343,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":107703,"byte_end":107709,"line_start":97,"line_end":97,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\chain.rs","byte_start":165292,"byte_end":165297,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\chain.rs","byte_start":165554,"byte_end":165559,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\chain.rs","byte_start":165764,"byte_end":165769,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\collect.rs","byte_start":167318,"byte_end":167325,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\collect.rs","byte_start":167623,"byte_end":167630,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\collect.rs","byte_start":167806,"byte_end":167813,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\concat.rs","byte_start":168705,"byte_end":168711,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\concat.rs","byte_start":168978,"byte_end":168984,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\concat.rs","byte_start":169759,"byte_end":169765,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\cycle.rs","byte_start":170378,"byte_end":170383,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\cycle.rs","byte_start":170572,"byte_end":170577,"line_start":29,"line_end":29,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\cycle.rs","byte_start":171326,"byte_end":171331,"line_start":57,"line_end":57,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\enumerate.rs","byte_start":172015,"byte_end":172024,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":5568},{"krate":0,"index":5569}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\enumerate.rs","byte_start":172243,"byte_end":172252,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\enumerate.rs","byte_start":172370,"byte_end":172379,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter.rs","byte_start":173763,"byte_end":173769,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter.rs","byte_start":174242,"byte_end":174248,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":5639},{"krate":0,"index":5640},{"krate":0,"index":5641},{"krate":0,"index":5642}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter.rs","byte_start":174626,"byte_end":174632,"line_start":58,"line_end":58,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter.rs","byte_start":174981,"byte_end":174987,"line_start":69,"line_end":69,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter_map.rs","byte_start":177136,"byte_end":177145,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter_map.rs","byte_start":177442,"byte_end":177451,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":5709},{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5712}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter_map.rs","byte_start":177730,"byte_end":177739,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter_map.rs","byte_start":178016,"byte_end":178025,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\flatten.rs","byte_start":180102,"byte_end":180109,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5772},{"krate":0,"index":5773}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\flatten.rs","byte_start":180278,"byte_end":180285,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\flatten.rs","byte_start":180477,"byte_end":180484,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fold.rs","byte_start":181926,"byte_end":181930,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fold.rs","byte_start":182286,"byte_end":182290,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fold.rs","byte_start":182608,"byte_end":182612,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fold.rs","byte_start":182859,"byte_end":182863,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\for_each.rs","byte_start":184396,"byte_end":184403,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\for_each.rs","byte_start":184696,"byte_end":184703,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\for_each.rs","byte_start":184979,"byte_end":184986,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\for_each.rs","byte_start":185237,"byte_end":185244,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186293,"byte_end":186297,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":6025},{"krate":0,"index":6026},{"krate":0,"index":6027},{"krate":0,"index":6028}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186794,"byte_end":186798,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186896,"byte_end":186900,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188100,"byte_end":188112,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":190602,"byte_end":190614,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":190734,"byte_end":190746,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\map.rs","byte_start":191594,"byte_end":191597,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\map.rs","byte_start":191812,"byte_end":191815,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":6164},{"krate":0,"index":6165},{"krate":0,"index":6166},{"krate":0,"index":6167}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\map.rs","byte_start":191984,"byte_end":191987,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\map.rs","byte_start":192161,"byte_end":192164,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\next.rs","byte_start":193311,"byte_end":193315,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\next.rs","byte_start":193366,"byte_end":193370,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\next.rs","byte_start":193521,"byte_end":193525,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\next.rs","byte_start":193664,"byte_end":193668,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\select_next_some.rs","byte_start":194317,"byte_end":194331,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\select_next_some.rs","byte_start":194482,"byte_end":194496,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\select_next_some.rs","byte_start":194640,"byte_end":194654,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":195829,"byte_end":195837,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":6324},{"krate":0,"index":6325},{"krate":0,"index":1125},{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":197014,"byte_end":197022,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":197164,"byte_end":197172,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":198330,"byte_end":198334,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":198605,"byte_end":198609,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":198720,"byte_end":198724,"line_start":128,"line_end":128,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip.rs","byte_start":199570,"byte_end":199574,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":6420},{"krate":0,"index":6421},{"krate":0,"index":6422},{"krate":0,"index":6423}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip.rs","byte_start":199798,"byte_end":199802,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip.rs","byte_start":199920,"byte_end":199924,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip_while.rs","byte_start":201551,"byte_end":201560,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip_while.rs","byte_start":202012,"byte_end":202021,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":6496},{"krate":0,"index":6497},{"krate":0,"index":6498},{"krate":0,"index":6499}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip_while.rs","byte_start":202428,"byte_end":202437,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip_while.rs","byte_start":202697,"byte_end":202706,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take.rs","byte_start":204989,"byte_end":204993,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":6545},{"krate":0,"index":6546},{"krate":0,"index":6547},{"krate":0,"index":6548}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take.rs","byte_start":205199,"byte_end":205203,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take.rs","byte_start":206197,"byte_end":206201,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_while.rs","byte_start":207148,"byte_end":207157,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_while.rs","byte_start":207605,"byte_end":207614,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":6621},{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":6624}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_while.rs","byte_start":208014,"byte_end":208023,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_while.rs","byte_start":209577,"byte_end":209586,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":210898,"byte_end":210907,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":211234,"byte_end":211243,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":6684},{"krate":0,"index":6685},{"krate":0,"index":6686},{"krate":0,"index":6687},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":213417,"byte_end":213426,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":214458,"byte_end":214467,"line_start":156,"line_end":156,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\then.rs","byte_start":215341,"byte_end":215345,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\then.rs","byte_start":215635,"byte_end":215639,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6756},{"krate":0,"index":6757}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\then.rs","byte_start":215936,"byte_end":215940,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\then.rs","byte_start":216178,"byte_end":216182,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218048,"byte_end":218051,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":219694,"byte_end":219697,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":219888,"byte_end":219891,"line_start":73,"line_end":73,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":222548,"byte_end":222552,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":223038,"byte_end":223042,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":223206,"byte_end":223210,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":6897},{"krate":0,"index":6898},{"krate":0,"index":6899},{"krate":0,"index":6900}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":223662,"byte_end":223666,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":224893,"byte_end":224897,"line_start":113,"line_end":113,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122327,"byte_end":122328,"line_start":202,"line_end":202,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\and_then.rs","byte_start":262037,"byte_end":262044,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\and_then.rs","byte_start":262337,"byte_end":262344,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":6967},{"krate":0,"index":6968},{"krate":0,"index":6969},{"krate":0,"index":6970}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\and_then.rs","byte_start":262637,"byte_end":262644,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\and_then.rs","byte_start":263822,"byte_end":263829,"line_start":84,"line_end":84,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\into_stream.rs","byte_start":264724,"byte_end":264734,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1577},{"krate":0,"index":7244},{"krate":0,"index":7245},{"krate":0,"index":7246},{"krate":0,"index":7247}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\into_stream.rs","byte_start":264927,"byte_end":264937,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\into_stream.rs","byte_start":265058,"byte_end":265068,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\or_else.rs","byte_start":266122,"byte_end":266128,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\or_else.rs","byte_start":266420,"byte_end":266426,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":7468},{"krate":0,"index":7469},{"krate":0,"index":7470},{"krate":0,"index":7471}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\or_else.rs","byte_start":266716,"byte_end":266722,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\or_else.rs","byte_start":268035,"byte_end":268041,"line_start":88,"line_end":88,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_next.rs","byte_start":268957,"byte_end":268964,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_next.rs","byte_start":269018,"byte_end":269025,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_next.rs","byte_start":269188,"byte_end":269195,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_next.rs","byte_start":269337,"byte_end":269344,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_for_each.rs","byte_start":270075,"byte_end":270085,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_for_each.rs","byte_start":270381,"byte_end":270391,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_for_each.rs","byte_start":270681,"byte_end":270691,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter.rs","byte_start":272018,"byte_end":272027,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter.rs","byte_start":272423,"byte_end":272432,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":7615},{"krate":0,"index":7616},{"krate":0,"index":7617},{"krate":0,"index":7618}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter.rs","byte_start":272731,"byte_end":272740,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter.rs","byte_start":273009,"byte_end":273018,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":275124,"byte_end":275136,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":275436,"byte_end":275448,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":7685},{"krate":0,"index":7686},{"krate":0,"index":7687},{"krate":0,"index":7688}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":275645,"byte_end":275657,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":275947,"byte_end":275959,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_flatten.rs","byte_start":278098,"byte_end":278108,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":7735},{"krate":0,"index":7736},{"krate":0,"index":7737},{"krate":0,"index":7738}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_flatten.rs","byte_start":278373,"byte_end":278383,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_flatten.rs","byte_start":278629,"byte_end":278639,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_collect.rs","byte_start":280184,"byte_end":280194,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_collect.rs","byte_start":280367,"byte_end":280377,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_collect.rs","byte_start":280565,"byte_end":280575,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_concat.rs","byte_start":281532,"byte_end":281541,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_concat.rs","byte_start":281793,"byte_end":281802,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_fold.rs","byte_start":282993,"byte_end":283000,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1830}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_fold.rs","byte_start":283359,"byte_end":283366,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_fold.rs","byte_start":283703,"byte_end":283710,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_fold.rs","byte_start":283976,"byte_end":283983,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1848},{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287751,"byte_end":287760,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1869}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":288061,"byte_end":288070,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":289759,"byte_end":289771,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":290227,"byte_end":290239,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1901},{"krate":0,"index":8056},{"krate":0,"index":8057},{"krate":0,"index":8058},{"krate":0,"index":8059}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":290660,"byte_end":290672,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":292206,"byte_end":292218,"line_start":105,"line_end":105,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_take_while.rs","byte_start":293366,"byte_end":293378,"line_start":27,"line_end":27,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_take_while.rs","byte_start":293830,"byte_end":293842,"line_start":43,"line_end":43,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1936},{"krate":0,"index":8132},{"krate":0,"index":8133},{"krate":0,"index":8134},{"krate":0,"index":8135}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_take_while.rs","byte_start":294249,"byte_end":294261,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_take_while.rs","byte_start":295868,"byte_end":295880,"line_start":113,"line_end":113,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1948}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230301,"byte_end":230302,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296661,"byte_end":296665,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":297271,"byte_end":297275,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298416,"byte_end":298422,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298449,"byte_end":298455,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298762,"byte_end":298768,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299380,"byte_end":299385,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299417,"byte_end":299422,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299507,"byte_end":299512,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299761,"byte_end":299766,"line_start":42,"line_end":42,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300586,"byte_end":300590,"line_start":31,"line_end":31,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300719,"byte_end":300723,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":301328,"byte_end":301332,"line_start":60,"line_end":60,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":301942,"byte_end":301949,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":301981,"byte_end":301988,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":302073,"byte_end":302080,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":302325,"byte_end":302332,"line_start":40,"line_end":40,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2139}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":302693,"byte_end":302699,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":302730,"byte_end":302736,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2157}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303478,"byte_end":303484,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2164},{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Inherent","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304839,"byte_end":304845,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":306268,"byte_end":306274,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":306492,"byte_end":306498,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309771,"byte_end":309777,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":310080,"byte_end":310086,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":310312,"byte_end":310318,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2239}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\spawn.rs","byte_start":312161,"byte_end":312163,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\spawn.rs","byte_start":312218,"byte_end":312220,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":318472,"byte_end":318473,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":318707,"byte_end":318708,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2301}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":318977,"byte_end":318978,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":319993,"byte_end":319997,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2317}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":320091,"byte_end":320095,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":320354,"byte_end":320361,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2327},{"krate":0,"index":2328}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":320584,"byte_end":320591,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2333}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":320782,"byte_end":320789,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2338}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":321094,"byte_end":321107,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2344},{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":321524,"byte_end":321533,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":321815,"byte_end":321824,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":322084,"byte_end":322093,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":322413,"byte_end":322420,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2368},{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":322639,"byte_end":322646,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":322824,"byte_end":322831,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":323132,"byte_end":323140,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2389},{"krate":0,"index":2390}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":323363,"byte_end":323371,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2396}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":323553,"byte_end":323561,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":323871,"byte_end":323882,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2411},{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":324119,"byte_end":324130,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2418}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":324345,"byte_end":324356,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":324701,"byte_end":324713,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2432},{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":324951,"byte_end":324963,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2439}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":325179,"byte_end":325191,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":325788,"byte_end":325802,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":326023,"byte_end":326037,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":326236,"byte_end":326250,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2471}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":326554,"byte_end":326560,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2481}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":326653,"byte_end":326659,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2485},{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":11826,"byte_end":11832,"line_start":310,"line_end":310,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":11908,"byte_end":11914,"line_start":313,"line_end":313,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":675}},{"kind":"Mod","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":12148,"byte_end":12152,"line_start":322,"line_end":322,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2249}},{"kind":"Mod","span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\lib.rs","byte_start":12163,"byte_end":12168,"line_start":324,"line_end":324,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2277}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":35903,"byte_end":35910,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":36034,"byte_end":36041,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2487},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":36272,"byte_end":36279,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2487},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":37052,"byte_end":37059,"line_start":59,"line_end":59,"column_start":27,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2487},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\flatten.rs","byte_start":37290,"byte_end":37297,"line_start":71,"line_end":71,"column_start":22,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2487},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40255,"byte_end":40259,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":40356,"byte_end":40360,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":42079,"byte_end":42083,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2545},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\fuse.rs","byte_start":42192,"byte_end":42196,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2545},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\map.rs","byte_start":43075,"byte_end":43078,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\map.rs","byte_start":43247,"byte_end":43250,"line_start":28,"line_end":28,"column_start":33,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2590},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\map.rs","byte_start":43516,"byte_end":43519,"line_start":40,"line_end":40,"column_start":28,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2590},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19203,"byte_end":19204,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":121},"to":{"krate":0,"index":122}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\future\\mod.rs","byte_start":19335,"byte_end":19341,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":9060},"to":{"krate":0,"index":122}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\into_future.rs","byte_start":66117,"byte_end":66127,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\into_future.rs","byte_start":66275,"byte_end":66285,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3213},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\into_future.rs","byte_start":66391,"byte_end":66401,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3213},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":67054,"byte_end":67064,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":67188,"byte_end":67198,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3258},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":67445,"byte_end":67455,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3258},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":68468,"byte_end":68478,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3258},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten.rs","byte_start":68725,"byte_end":68735,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3258},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72129,"byte_end":72142,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72266,"byte_end":72279,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3316},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72526,"byte_end":72539,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3316},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":48839,"byte_end":48842,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":260},"to":{"krate":0,"index":261}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_future\\mod.rs","byte_start":48925,"byte_end":48934,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":32},"to":{"krate":0,"index":261}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":73881,"byte_end":73885,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4302},"to":{"krate":1,"index":2075}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74458,"byte_end":74462,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4302},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\lazy.rs","byte_start":74594,"byte_end":74598,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4302},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75175,"byte_end":75182,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4308},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75733,"byte_end":75740,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4308},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75885,"byte_end":75892,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4308},"to":{"krate":1,"index":2075}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\pending.rs","byte_start":75919,"byte_end":75926,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4308},"to":{"krate":1,"index":1732}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":77247,"byte_end":77256,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":78251,"byte_end":78260,"line_start":72,"line_end":72,"column_start":35,"column_end":44},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4314},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\maybe_done.rs","byte_start":78461,"byte_end":78470,"line_start":81,"line_end":81,"column_start":30,"column_end":39},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4314},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":79886,"byte_end":79898,"line_start":29,"line_end":29,"column_start":22,"column_end":34},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":80908,"byte_end":80920,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4373},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_maybe_done.rs","byte_start":81124,"byte_end":81136,"line_start":66,"line_end":66,"column_start":33,"column_end":45},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4373},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\option.rs","byte_start":82644,"byte_end":82656,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4432},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\option.rs","byte_start":82989,"byte_end":83001,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4432},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\option.rs","byte_start":83184,"byte_end":83196,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4432},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":83598,"byte_end":83604,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":436},"to":{"krate":1,"index":2075}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":84274,"byte_end":84280,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":436},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\poll_fn.rs","byte_start":84422,"byte_end":84428,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":436},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":84905,"byte_end":84910,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85089,"byte_end":85094,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4480},"to":{"krate":1,"index":2075}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85126,"byte_end":85131,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4480},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\ready.rs","byte_start":85228,"byte_end":85233,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4480},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":91952,"byte_end":91958,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4878},"to":{"krate":1,"index":2075}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":94200,"byte_end":94206,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4878},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\select.rs","byte_start":94909,"byte_end":94915,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4878},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":102462,"byte_end":102471,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5252},"to":{"krate":1,"index":2075}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\try_select.rs","byte_start":104177,"byte_end":104186,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5252},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":105677,"byte_end":105683,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":106068,"byte_end":106074,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":106455,"byte_end":106461,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":106702,"byte_end":106708,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5260},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":107055,"byte_end":107061,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5260},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":107337,"byte_end":107343,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5260},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\future\\either.rs","byte_start":107703,"byte_end":107709,"line_start":97,"line_end":97,"column_start":28,"column_end":34},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5260},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\chain.rs","byte_start":165292,"byte_end":165297,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\chain.rs","byte_start":165554,"byte_end":165559,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5318},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\chain.rs","byte_start":165764,"byte_end":165769,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5318},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\collect.rs","byte_start":167318,"byte_end":167325,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\collect.rs","byte_start":167623,"byte_end":167630,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5375},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\collect.rs","byte_start":167806,"byte_end":167813,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5375},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\concat.rs","byte_start":168705,"byte_end":168711,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\concat.rs","byte_start":168978,"byte_end":168984,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5431},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\concat.rs","byte_start":169759,"byte_end":169765,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5431},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\cycle.rs","byte_start":170378,"byte_end":170383,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\cycle.rs","byte_start":170572,"byte_end":170577,"line_start":29,"line_end":29,"column_start":21,"column_end":26},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5476},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\cycle.rs","byte_start":171326,"byte_end":171331,"line_start":57,"line_end":57,"column_start":26,"column_end":31},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5476},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\enumerate.rs","byte_start":172015,"byte_end":172024,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\enumerate.rs","byte_start":172243,"byte_end":172252,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5521},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\enumerate.rs","byte_start":172370,"byte_end":172379,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5521},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter.rs","byte_start":173763,"byte_end":173769,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":5570},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter.rs","byte_start":174242,"byte_end":174248,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter.rs","byte_start":174626,"byte_end":174632,"line_start":58,"line_end":58,"column_start":34,"column_end":40},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5570},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter.rs","byte_start":174981,"byte_end":174987,"line_start":69,"line_end":69,"column_start":29,"column_end":35},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5570},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter_map.rs","byte_start":177136,"byte_end":177145,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":5643},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter_map.rs","byte_start":177442,"byte_end":177451,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":5643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter_map.rs","byte_start":177730,"byte_end":177739,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":5643},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\filter_map.rs","byte_start":178016,"byte_end":178025,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":5643},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\flatten.rs","byte_start":180102,"byte_end":180109,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":5713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\flatten.rs","byte_start":180278,"byte_end":180285,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":5713},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\flatten.rs","byte_start":180477,"byte_end":180484,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":5713},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fold.rs","byte_start":181926,"byte_end":181930,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":5835},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fold.rs","byte_start":182286,"byte_end":182290,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":5835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fold.rs","byte_start":182608,"byte_end":182612,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5835},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fold.rs","byte_start":182859,"byte_end":182863,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5835},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\for_each.rs","byte_start":184396,"byte_end":184403,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5914},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\for_each.rs","byte_start":184696,"byte_end":184703,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\for_each.rs","byte_start":184979,"byte_end":184986,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5914},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\for_each.rs","byte_start":185237,"byte_end":185244,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5914},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186293,"byte_end":186297,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":5980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186794,"byte_end":186798,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":5980},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\fuse.rs","byte_start":186896,"byte_end":186900,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5980},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":188100,"byte_end":188112,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":6029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":190602,"byte_end":190614,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6029},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\into_future.rs","byte_start":190734,"byte_end":190746,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":6029},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\map.rs","byte_start":191594,"byte_end":191597,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":6112},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\map.rs","byte_start":191812,"byte_end":191815,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":6112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\map.rs","byte_start":191984,"byte_end":191987,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":6112},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\map.rs","byte_start":192161,"byte_end":192164,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":6112},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\next.rs","byte_start":193311,"byte_end":193315,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":6261},"to":{"krate":1,"index":2075}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\next.rs","byte_start":193366,"byte_end":193370,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":6261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\next.rs","byte_start":193521,"byte_end":193525,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":6261},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\next.rs","byte_start":193664,"byte_end":193668,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":6261},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\select_next_some.rs","byte_start":194317,"byte_end":194331,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\select_next_some.rs","byte_start":194482,"byte_end":194496,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6269},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\select_next_some.rs","byte_start":194640,"byte_end":194654,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6269},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":195829,"byte_end":195837,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":197014,"byte_end":197022,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6277},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":197164,"byte_end":197172,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":6277},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":198330,"byte_end":198334,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6326},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":198605,"byte_end":198609,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6326},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\peek.rs","byte_start":198720,"byte_end":198724,"line_start":128,"line_end":128,"column_start":25,"column_end":29},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6326},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip.rs","byte_start":199570,"byte_end":199574,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":6375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip.rs","byte_start":199798,"byte_end":199802,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6375},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip.rs","byte_start":199920,"byte_end":199924,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6375},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip_while.rs","byte_start":201551,"byte_end":201560,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":6424},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip_while.rs","byte_start":202012,"byte_end":202021,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":6424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip_while.rs","byte_start":202428,"byte_end":202437,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6424},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\skip_while.rs","byte_start":202697,"byte_end":202706,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6424},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take.rs","byte_start":204989,"byte_end":204993,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take.rs","byte_start":205199,"byte_end":205203,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6500},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take.rs","byte_start":206197,"byte_end":206201,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6500},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_while.rs","byte_start":207148,"byte_end":207157,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":6549},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_while.rs","byte_start":207605,"byte_end":207614,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_while.rs","byte_start":208014,"byte_end":208023,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":6549},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_while.rs","byte_start":209577,"byte_end":209586,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6549},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":210898,"byte_end":210907,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6625},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":211234,"byte_end":211243,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":213417,"byte_end":213426,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6625},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\take_until.rs","byte_start":214458,"byte_end":214467,"line_start":156,"line_end":156,"column_start":31,"column_end":40},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6625},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\then.rs","byte_start":215341,"byte_end":215345,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6688},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\then.rs","byte_start":215635,"byte_end":215639,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\then.rs","byte_start":215936,"byte_end":215940,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6688},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\then.rs","byte_start":216178,"byte_end":216182,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6688},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":218048,"byte_end":218051,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":6758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":219694,"byte_end":219697,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":6758},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\zip.rs","byte_start":219888,"byte_end":219891,"line_start":73,"line_end":73,"column_start":27,"column_end":30},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6758},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":222548,"byte_end":222552,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6821},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":223038,"byte_end":223042,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":6821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":223206,"byte_end":223210,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":6821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":223662,"byte_end":223666,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6821},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\scan.rs","byte_start":224893,"byte_end":224897,"line_start":113,"line_end":113,"column_start":40,"column_end":44},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6821},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122327,"byte_end":122328,"line_start":202,"line_end":202,"column_start":31,"column_end":32},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":1414},"to":{"krate":0,"index":1415}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\stream\\mod.rs","byte_start":122471,"byte_end":122477,"line_start":206,"line_end":206,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":4,"index":68},"to":{"krate":0,"index":1415}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\and_then.rs","byte_start":262037,"byte_end":262044,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6901},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\and_then.rs","byte_start":262337,"byte_end":262344,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\and_then.rs","byte_start":262637,"byte_end":262644,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":6901},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\and_then.rs","byte_start":263822,"byte_end":263829,"line_start":84,"line_end":84,"column_start":34,"column_end":41},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":6901},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\into_stream.rs","byte_start":264724,"byte_end":264734,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":7202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\into_stream.rs","byte_start":264927,"byte_end":264937,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":7202},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\into_stream.rs","byte_start":265058,"byte_end":265068,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":7202},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\or_else.rs","byte_start":266122,"byte_end":266128,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":7402},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\or_else.rs","byte_start":266420,"byte_end":266426,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":7402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\or_else.rs","byte_start":266716,"byte_end":266722,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":7402},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\or_else.rs","byte_start":268035,"byte_end":268041,"line_start":88,"line_end":88,"column_start":34,"column_end":40},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":7402},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_next.rs","byte_start":268957,"byte_end":268964,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":7472},"to":{"krate":1,"index":2075}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_next.rs","byte_start":269018,"byte_end":269025,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":7472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_next.rs","byte_start":269188,"byte_end":269195,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":7472},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_next.rs","byte_start":269337,"byte_end":269344,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":7472},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_for_each.rs","byte_start":270075,"byte_end":270085,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":7480},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_for_each.rs","byte_start":270381,"byte_end":270391,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":7480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_for_each.rs","byte_start":270681,"byte_end":270691,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":7480},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter.rs","byte_start":272018,"byte_end":272027,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":7546},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter.rs","byte_start":272423,"byte_end":272432,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":7546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter.rs","byte_start":272731,"byte_end":272740,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":7546},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter.rs","byte_start":273009,"byte_end":273018,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":7546},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":275124,"byte_end":275136,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":7619},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":275436,"byte_end":275448,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":7619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":275645,"byte_end":275657,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":7619},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":275947,"byte_end":275959,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":7619},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_flatten.rs","byte_start":278098,"byte_end":278108,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":7689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_flatten.rs","byte_start":278373,"byte_end":278383,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":7689},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_flatten.rs","byte_start":278629,"byte_end":278639,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":7689},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_collect.rs","byte_start":280184,"byte_end":280194,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":7739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_collect.rs","byte_start":280367,"byte_end":280377,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":7739},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_collect.rs","byte_start":280565,"byte_end":280575,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":7739},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_concat.rs","byte_start":281532,"byte_end":281541,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":7795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_concat.rs","byte_start":281793,"byte_end":281802,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7795},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_fold.rs","byte_start":282993,"byte_end":283000,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7840},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_fold.rs","byte_start":283359,"byte_end":283366,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_fold.rs","byte_start":283703,"byte_end":283710,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7840},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_fold.rs","byte_start":283976,"byte_end":283983,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7840},"to":{"krate":1,"index":9060}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":287751,"byte_end":287760,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7919},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_unfold.rs","byte_start":288061,"byte_end":288070,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7919},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":289759,"byte_end":289771,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7984},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":290227,"byte_end":290239,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":290660,"byte_end":290672,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7984},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":292206,"byte_end":292218,"line_start":105,"line_end":105,"column_start":34,"column_end":46},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7984},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_take_while.rs","byte_start":293366,"byte_end":293378,"line_start":27,"line_end":27,"column_start":33,"column_end":45},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":8060},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_take_while.rs","byte_start":293830,"byte_end":293842,"line_start":43,"line_end":43,"column_start":18,"column_end":30},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":8060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_take_while.rs","byte_start":294249,"byte_end":294261,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":8060},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\try_take_while.rs","byte_start":295868,"byte_end":295880,"line_start":113,"line_end":113,"column_start":34,"column_end":46},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":8060},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230301,"byte_end":230302,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":1953},"to":{"krate":0,"index":1954}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\try_stream\\mod.rs","byte_start":230383,"byte_end":230392,"line_start":144,"line_end":144,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":97},"to":{"krate":0,"index":1954}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":296661,"byte_end":296665,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":8136},"to":{"krate":1,"index":2075}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\iter.rs","byte_start":297271,"byte_end":297275,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":8136},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298416,"byte_end":298422,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":8145},"to":{"krate":1,"index":2075}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298449,"byte_end":298455,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":8145},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\repeat.rs","byte_start":298762,"byte_end":298768,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":8145},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299380,"byte_end":299385,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":8154},"to":{"krate":1,"index":2075}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299417,"byte_end":299422,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":8154},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299507,"byte_end":299512,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":8154},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\empty.rs","byte_start":299761,"byte_end":299766,"line_start":42,"line_end":42,"column_start":19,"column_end":24},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":8154},"to":{"krate":1,"index":1732}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300586,"byte_end":300590,"line_start":31,"line_end":31,"column_start":11,"column_end":15},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":8160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":300719,"byte_end":300723,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":8160},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\once.rs","byte_start":301328,"byte_end":301332,"line_start":60,"line_end":60,"column_start":35,"column_end":39},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":8160},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":301942,"byte_end":301949,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":8202},"to":{"krate":1,"index":2075}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":301981,"byte_end":301988,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":8202},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":302073,"byte_end":302080,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":8202},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\pending.rs","byte_start":302325,"byte_end":302332,"line_start":40,"line_end":40,"column_start":19,"column_end":26},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":8202},"to":{"krate":1,"index":1732}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":302693,"byte_end":302699,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":2150},"to":{"krate":1,"index":2075}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":302730,"byte_end":302736,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":2150},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\poll_fn.rs","byte_start":303478,"byte_end":303484,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":2150},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":304839,"byte_end":304845,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":8208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":306268,"byte_end":306274,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":8208},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\select.rs","byte_start":306492,"byte_end":306498,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":8208},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":309771,"byte_end":309777,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":8268},"to":{"krate":1,"index":6562}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":310080,"byte_end":310086,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":8268},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\stream\\unfold.rs","byte_start":310312,"byte_end":310318,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":8268},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\spawn.rs","byte_start":312161,"byte_end":312163,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":2255},"to":{"krate":0,"index":2258}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\spawn.rs","byte_start":312218,"byte_end":312220,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":2257},"to":{"krate":0,"index":2259}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\spawn.rs","byte_start":312299,"byte_end":312304,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":15,"index":10},"to":{"krate":0,"index":2258}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\task\\spawn.rs","byte_start":315068,"byte_end":315078,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":15,"index":13},"to":{"krate":0,"index":2259}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":318472,"byte_end":318473,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":2289},"to":{"krate":0,"index":2284}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":318611,"byte_end":318618,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":2284},"to":{"krate":0,"index":2294}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":318707,"byte_end":318708,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":2298},"to":{"krate":0,"index":2294}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":318893,"byte_end":318899,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2294},"to":{"krate":0,"index":2302}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":318977,"byte_end":318978,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":2306},"to":{"krate":0,"index":2302}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":319993,"byte_end":319997,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":2311},"to":{"krate":1,"index":2022}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":320091,"byte_end":320095,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":2311},"to":{"krate":0,"index":2284}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":320354,"byte_end":320361,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":8352},"to":{"krate":0,"index":2284}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":320584,"byte_end":320591,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":8352},"to":{"krate":0,"index":2294}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":320782,"byte_end":320789,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":8352},"to":{"krate":0,"index":2302}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":321094,"byte_end":321107,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":8373},"to":{"krate":0,"index":2284}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":321524,"byte_end":321533,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":2284}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":321815,"byte_end":321824,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":2294}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":322084,"byte_end":322093,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":8389},"to":{"krate":0,"index":2302}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":322413,"byte_end":322420,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":8404},"to":{"krate":0,"index":2284}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":322639,"byte_end":322646,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":8404},"to":{"krate":0,"index":2294}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":322824,"byte_end":322831,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":8404},"to":{"krate":0,"index":2302}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":323132,"byte_end":323140,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":8419},"to":{"krate":0,"index":2284}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":323363,"byte_end":323371,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":8419},"to":{"krate":0,"index":2294}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":323553,"byte_end":323561,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":8419},"to":{"krate":0,"index":2302}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":323871,"byte_end":323882,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":8434},"to":{"krate":0,"index":2284}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":324119,"byte_end":324130,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":8434},"to":{"krate":0,"index":2294}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":324345,"byte_end":324356,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":8434},"to":{"krate":0,"index":2302}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":324701,"byte_end":324713,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":8446},"to":{"krate":0,"index":2284}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":324951,"byte_end":324963,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":8446},"to":{"krate":0,"index":2294}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":325179,"byte_end":325191,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":8446},"to":{"krate":0,"index":2302}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":325788,"byte_end":325802,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":8458},"to":{"krate":0,"index":2284}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":326023,"byte_end":326037,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":8458},"to":{"krate":0,"index":2294}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":326236,"byte_end":326250,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":8458},"to":{"krate":0,"index":2302}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":326554,"byte_end":326560,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":2475},"to":{"krate":1,"index":2022}},{"span":{"file_name":"C:\\Users\\CYM\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.8\\src\\fns.rs","byte_start":326653,"byte_end":326659,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":2475},"to":{"krate":0,"index":2284}}]}